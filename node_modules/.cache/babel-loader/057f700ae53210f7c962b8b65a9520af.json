{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"header\", {\n  class: \"welcome-header\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"welcome-header__title\"\n}, \"회 원 가 입\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  id: \"signup\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n\n  const _component_v_col = _resolveComponent(\"v-col\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => _ctx.SignupForm && _ctx.SignupForm(...args), [\"prevent\"])),\n    class: \"signup\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.c_name = $event),\n    class: \"login-form__input\",\n    type: \"text\",\n    name: \"name\",\n    required: \"\",\n    placeholder: \"이름\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.c_name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.c_email = $event),\n    class: \"login-form__input\",\n    type: \"text\",\n    name: \"email\",\n    rules: \"emailRules\",\n    required: \"\",\n    placeholder: \"이메일\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.c_email]]), _createElementVNode(\"button\", {\n    class: \"login-form__btn_right\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.existEmail($data.c_email))\n  }, \"이메일 중복 검사\"), _createCommentVNode(\" <input class=\\\"login-form__input\\\" type=\\\"email\\\" required placeholder=\\\"이메일\\\"> \"), _createVNode(_component_v_col, {\n    cols: \"12\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_text_field, {\n      modelValue: $options.c_passwd,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $options.c_passwd = $event),\n      label: \"비밀번호*\",\n      type: \"password\",\n      rules: $options.user_pw_rule\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"rules\"])]),\n    _: 1\n    /* STABLE */\n\n  }), _createVNode(_component_v_col, {\n    cols: \"12\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_text_field, {\n      modelValue: $options.c_passwd_chk,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $options.c_passwd_chk = $event),\n      label: \"비밀번호 확인*\",\n      type: \"password\",\n      rules: $options.user_pw_rule2\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"rules\"])]),\n    _: 1\n    /* STABLE */\n\n  }), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.c_phonenum = $event),\n    class: \"login-form__input\",\n    type: \"number\",\n    name: \"phonenum\",\n    required: \"\",\n    placeholder: \"휴대폰번호\",\n    minlength: \"11\",\n    maxlength: \"11\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.c_phonenum]]), _createCommentVNode(\" 인증번호 받는 부분 추가 요망 \"), _createCommentVNode(\" <input class=\\\"login-form__btn_right\\\" type=\\\"submit\\\" value=\\\"인증번호 받기\\\">\\n            <input class=\\\"login-form__input\\\" type=\\\"text\\\" required placeholder=\\\"인증번호를 입력해주세요\\\">\\n            <input class=\\\"login-form__btn_right\\\" type=\\\"submit\\\" value=\\\"인 증 확 인\\\"> \"), _createElementVNode(\"button\", {\n    class: \"login-form__btn_right\",\n    onClick: _cache[6] || (_cache[6] = $event => $options.signupConsumer({\n      c_name: $data.c_name,\n      c_email: $data.c_email,\n      c_passwd: $options.c_passwd,\n      c_phonenum: $data.c_phonenum\n    }))\n  }, \"다음\")], 32\n  /* HYDRATE_EVENTS */\n  )])]);\n}","map":{"version":3,"mappings":";;gCAEQA,oBAES,QAFT,EAES;EAFDC,KAAK,EAAC;AAEL,CAFT,EAA8B,cAC1BD,oBAA8C,IAA9C,EAA8C;EAA1CC,KAAK,EAAC;AAAoC,CAA9C,EAAkC,SAAlC,CAD0B,CAA9B;;AAAA;;;EAGKC,EAAE,EAAE;;;;;;;uBAJbC,oBAmCM,KAnCN,EAmCM,IAnCN,EAmCM,CAlCFC,UAkCE,EA/BFJ,oBA8BM,KA9BN,cA8BM,CA7BNA,oBA4BO,MA5BP,EA4BO;IA5BAK,QAAM,wDAAUC,2CAAV,EAAoB,WAApB,EA4BN;IA5B4BL,KAAK,EAAC;EA4BlC,CA5BP,mBACID,oBAAqG,OAArG,EAAqG;+DAArFO,eAAMC,OAA+E;IAA7EP,KAAK,EAAC,mBAAuE;IAAnDQ,IAAI,EAAC,MAA8C;IAAvCC,IAAI,EAAC,MAAkC;IAA3BC,QAAQ,EAAR,EAA2B;IAAlBC,WAAW,EAAC;EAAM,CAArG;;EAAA,kBAAgBL,iCAChBP,oBAA2H,OAA3H,EAA2H;+DAA3GO,gBAAOC,OAAoG;IAAlGP,KAAK,EAAC,mBAA4F;IAAxEQ,IAAI,EAAC,MAAmE;IAA5DC,IAAI,EAAC,OAAuD;IAA/CG,KAAK,EAAC,YAAyC;IAA5BF,QAAQ,EAAR,EAA4B;IAAnBC,WAAW,EAAC;EAAO,CAA3H;;EAAA,kBAAgBL,kBAChBP,oBAAqF,QAArF,EAAqF;IAA7EC,KAAK,EAAC,uBAAuE;IAA9Ca,OAAK,sCAAEC,oBAAWR,aAAX,CAAF;EAAyC,CAArF,EAAmE,WAAnE,GACTS,0GACCC,aAOQC,gBAPR,EAOQ;IAPDC,IAAI,EAAC;EAOJ,CAPR,EAAgB;sBACd,MAKkB,CALlBF,aAKkBG,uBALlB,EAKkB;kBAJRL,iBAIQ;iEAJRA,oBAAQP,OAIA;MAHhBa,KAAK,EAAC,OAGU;MAFhBZ,IAAI,EAAC,UAEW;MADfI,KAAK,EAAEE;IACQ,CALlB;;IAAA,0BAKkB,EANJ;;;;EAAA,CAAhB,GAQAE,aAOQC,gBAPR,EAOQ;IAPDC,IAAI,EAAC;EAOJ,CAPR,EAAgB;sBACd,MAKkB,CALlBF,aAKkBG,uBALlB,EAKkB;kBAJRL,qBAIQ;iEAJRA,wBAAYP,OAIJ;MAHhBa,KAAK,EAAC,UAGU;MAFhBZ,IAAI,EAAC,UAEW;MADfI,KAAK,EAAEE;IACQ,CALlB;;IAAA,0BAKkB,EANJ;;;;EAAA,CAAhB,mBASQf,oBAA+I,OAA/I,EAA+I;+DAA/HO,mBAAUC,OAAqH;IAAnHP,KAAK,EAAC,mBAA6G;IAAzFQ,IAAI,EAAC,QAAoF;IAA3EC,IAAI,EAAC,UAAsE;IAA3DC,QAAQ,EAAR,EAA2D;IAAlDC,WAAW,EAAC,OAAsC;IAA9BU,SAAS,EAAC,IAAoB;IAAfC,SAAS,EAAC;EAAK,CAA/I;;EAAA,kBAAgBhB,qBAC1BS,2CACUA,gSAGThB,oBAAkH,QAAlH,EAAkH;IAA1GC,KAAK,EAAC,uBAAoG;IAA3Ea,OAAK,sCAAEC,wBAAc;MAAAS,QAAEjB,YAAF;MAAQkB,SAAElB,aAAV;MAAiBmB,UAAEX,iBAAnB;MAA2BY,YAAEpB;IAA7B,CAAd,CAAF;EAAsE,CAAlH,EAAuG,IAAvG,EA3BK;;EAAA,CA6BM,CA9BN,CA+BE,CAnCN","names":["_createElementVNode","class","id","_createElementBlock","_hoisted_1","onSubmit","_ctx","$data","$event","type","name","required","placeholder","rules","onClick","$options","_createCommentVNode","_createVNode","_component_v_col","cols","_component_v_text_field","label","minlength","maxlength","c_name","c_email","c_passwd","c_phonenum"],"sourceRoot":"","sources":["/home/realvue/src/views/test.vue"],"sourcesContent":["<template>\n    <div>\n        <header class=\"welcome-header\">\n            <h1 class=\"welcome-header__title\">회 원 가 입</h1>\n        </header>\n        <div id =\"signup\">\n        <form @submit.prevent=\"SignupForm\" class=\"signup\">\n            <input v-model=\"c_name\" class=\"login-form__input\" type=\"text\" name=\"name\" required placeholder=\"이름\" >\n            <input v-model=\"c_email\" class=\"login-form__input\" type=\"text\" name=\"email\" rules=\"emailRules\" required placeholder=\"이메일\" > \n            <button class=\"login-form__btn_right\" @click=\"existEmail(c_email)\">이메일 중복 검사</button>\n\t\t\t<!-- <input class=\"login-form__input\" type=\"email\" required placeholder=\"이메일\"> -->\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"c_passwd\" \n        label=\"비밀번호*\" \n        type=\"password\" \n        :rules=\"user_pw_rule\"\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"c_passwd_chk\" \n        label=\"비밀번호 확인*\" \n        type=\"password\" \n        :rules=\"user_pw_rule2\"\n        ></v-text-field>\n    </v-col>\n\n            <input v-model=\"c_phonenum\" class=\"login-form__input\" type=\"number\" name=\"phonenum\" required placeholder=\"휴대폰번호\" minlength=\"11\" maxlength=\"11\">\n\t\t<!-- 인증번호 받는 부분 추가 요망 -->\n            <!-- <input class=\"login-form__btn_right\" type=\"submit\" value=\"인증번호 받기\">\n            <input class=\"login-form__input\" type=\"text\" required placeholder=\"인증번호를 입력해주세요\">\n            <input class=\"login-form__btn_right\" type=\"submit\" value=\"인 증 확 인\"> -->\n\t\t\t<button class=\"login-form__btn_right\" @click=\"signupConsumer({c_name, c_email, c_passwd, c_phonenum})\">다음</button>\n        </form>\n        </div>\n    </div>\n</template>\n\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n\tname: 'SignupForm',\n\tdata() {\n\t\treturn {\n            c_name: null,\n\t\t\tc_email: null,\n\t\t\tc_passwd: null,\n\t\t\tc_phonenum: null,\n            dialog: false,\n            state: 'ins',\n\t\t};\n\t},\n\tmethods:{\n        existEmail(c_email) {\n            console.log(c_email);\n\t\t\tthis.$store.dispatch('existEmail', c_email)\n\t\t},\n        emailRules: [\n            v => !!v || 'E-mail을 입력해주세요.',\n            v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.',\n        ],\n        c_passwd: '',\n        c_passwd_chk: '',\n        user_pw_rule: [\n            v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n            v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n        ],\n        user_pw_rule2: [\n            v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n            v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n            v => v === this.user_pw || '패스워드가 일치하지 않습니다.'\n        ],\n        \n        // emailRule:(c_email) {\n        //     v => !!v || '이메일을 입력해주세요.',\n        //     v => { \n        // const replaceV = v.replace(/(\\s*)/g, '')\n        // const pattern = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/\n        // return pattern.test(replaceV) || '이메일 형식으로 입력해주세요'\n        //     }\n        // },\n\t\tsignupConsumer(signupObj) {\n            console.log(this.$store.state.existEmail);\n            if(this.$store.state.existEmail){\n                alert('이메일 중복 확인을 완료해주세요!')\n            } else {\n                console.log(signupObj);\n                axios.post('http://localhost:8080/api/signupConsumer', signupObj) \n                .then(res => {\n                    console.log(res);\n                    if (res.data == 0){\n                        alert(\"회원가입 실패..\")\n                    } else {\n                        alert(\"회원가입 성공..\")\n                        // main으로 넘기기\n                        console.log(\"main으로!!\");\n                        console.log(this.token);\n                        console.log(res.data.token);\n                        this.token = res.data.token;\n                        this.$router.push({name: 'main', params: this.token});\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n            }\n\t\t}\n\t},\n};\n\n</script>\n\n\n\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}