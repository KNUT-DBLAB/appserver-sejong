{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelRadio as _vModelRadio, withDirectives as _withDirectives, withCtx as _withCtx, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"welcome-header1\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"welcome-header__title1\"\n}, \"따 과 농 과\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"welcome-header__text1\"\n};\nconst _hoisted_4 = {\n  class: \"login_keep_wrap\",\n  id: \"login_keep_wrap\"\n};\nconst _hoisted_5 = {\n  class: \"keep_check\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\",\n  id: \"keep\",\n  name: \"nvlong\",\n  class: \"input_keep\",\n  value: \"on\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"keep\",\n  class: \"keep_text\"\n}, \"로그인 상태 유지\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"consumer\"\n}, \"소비자\", -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"farm\"\n}, \"농가\", -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"login-form__btn\",\n  type: \"submit\"\n}, \"회원가입\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  const _component_v_form = _resolveComponent(\"v-form\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"header\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", _hoisted_3, _toDisplayString(this.$store.state.test.id), 1\n  /* TEXT */\n  )]), _createCommentVNode(\" @ 는 v-on 과 같은 표현식이다. 폼 내부에서 버튼을 누르면 submit 이벤트가 form 으로 전송되고 v-on:submit이 실행된다.\\n\\t\\t이때 페이지가 새로고침되므로 .prevent를 통해 새로고침을 막고 methods의 함수롤 호출하게 한다. \"), _createCommentVNode(\" <form @submit.prevent=\\\"submitForm\\\" class=\\\"login-form\\\">\\n\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<input class=\\\"login-form__input\\\" type=\\\"text\\\" id=\\\"name\\\" v-model=\\\"email\\\" />\\n\\t\\t\\t</div>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<input class=\\\"login-form__input\\\" type=\\\"password\\\" id=\\\"password\\\" v-model=\\\"password\\\" />\\n\\t\\t\\t</div> \"), _createVNode(_component_v_form, {\n    ref: \"form\",\n    modelValue: _ctx.valid,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.valid = $event),\n    \"lazy-validation\": \"\",\n    onSubmit: _withModifiers(_ctx.submitForm, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_text_field, {\n      modelValue: $data.email,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n      rules: _ctx.emailRules,\n      label: \"E-mail\",\n      required: \"\"\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n      modelValue: $data.password,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n      rules: _ctx.passwordRules,\n      label: \"Password\",\n      type: \"password\",\n      required: \"\"\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"rules\"]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _hoisted_7, _hoisted_8, _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      id: \"consumer\",\n      value: \"consumer\",\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.checkUser = $event)\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelRadio, $data.checkUser]]), _hoisted_10, _hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      id: \"farm\",\n      value: \"farm\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.checkUser = $event)\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelRadio, $data.checkUser]]), _hoisted_12, _hoisted_13])]), _createElementVNode(\"button\", {\n      class: \"login-form__btn\",\n      type: \"submit\",\n      onClick: _cache[4] || (_cache[4] = $event => $options.login())\n    }, \"로그인\"), _createVNode(_component_router_link, {\n      to: \"/clause\"\n    }, {\n      default: _withCtx(() => [_hoisted_14]),\n      _: 1\n      /* STABLE */\n\n    }), _createCommentVNode(\" <a class=\\\"login-form__a\\\" href=\\\"#\\\">아이디 찾기</a> \")]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\", \"onSubmit\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","id","type","name","value","for","_createElementBlock","_hoisted_2","_toDisplayString","$store","state","test","_createCommentVNode","_createVNode","_component_v_form","ref","_ctx","$event","onSubmit","_component_v_text_field","$data","rules","label","required","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","onClick","$options","_component_router_link","to","_hoisted_14"],"sourceRoot":"","sources":["/home/realvue/src/views/login/login.vue"],"sourcesContent":["<template>\n\n\t<div>\n\t<header class=\"welcome-header1\">\n        <h1 class=\"welcome-header__title1\">따 과 농 과</h1>\n        <p class=\"welcome-header__text1\">{{this.$store.state.test.id}}</p>\n    </header>\n\t\t<!-- @ 는 v-on 과 같은 표현식이다. 폼 내부에서 버튼을 누르면 submit 이벤트가 form 으로 전송되고 v-on:submit이 실행된다.\n\t\t이때 페이지가 새로고침되므로 .prevent를 통해 새로고침을 막고 methods의 함수롤 호출하게 한다. -->\n\t\t<!-- <form @submit.prevent=\"submitForm\" class=\"login-form\">\n\n\t\t\t<div>\n\t\t\t\t<input class=\"login-form__input\" type=\"text\" id=\"name\" v-model=\"email\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input class=\"login-form__input\" type=\"password\" id=\"password\" v-model=\"password\" />\n\t\t\t</div> -->\n\n\t<v-form\n    ref=\"form\"\n    v-model=\"valid\"\n    lazy-validation\n\t@submit.prevent=\"submitForm\"\n  >\n          <v-text-field\n            v-model=\"email\"\n            :rules=\"emailRules\"\n            label=\"E-mail\"\n            required\n          ></v-text-field>\n\n\t\t    <v-text-field\n            v-model=\"password\"\n            :rules=\"passwordRules\"\n            label=\"Password\"\n\t\t\ttype=\"password\"\n            required\n          ></v-text-field>\n\t\t  \n\n\n    <div class=\"login_keep_wrap\" id=\"login_keep_wrap\">\n        <div class=\"keep_check\">\n            <input type=\"checkbox\" id=\"keep\" name=\"nvlong\" class=\"input_keep\" value=\"on\">\n            <label for=\"keep\" class=\"keep_text\">로그인 상태 유지</label>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<input type=\"radio\" id=\"consumer\" value=\"consumer\" v-model=\"checkUser\">\n\t\t\t<label for=\"consumer\">소비자</label>\n\t\t\t<br>\n\t\t\t<input type=\"radio\" id=\"farm\" value=\"farm\" v-model=\"checkUser\">\n\t\t\t<label for=\"farm\">농가</label>\n\t\t\t<br>\n        </div>\n    </div>\n\t\t<button class=\"login-form__btn\" type=\"submit\" @click=\"login()\" >로그인</button>\n\t\t\n\t\t<router-link to='/clause'>\n\t\t\t<button class=\"login-form__btn\" type=\"submit\">회원가입</button>\n\t\t</router-link>\n\t\t\t<!-- <a class=\"login-form__a\" href=\"#\">아이디 찾기</a> -->\n\t\t</v-form>\n\t</div>\n</template>\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n\tname: 'SignupForm',\n\tdata() {\n\t\treturn {\n\t\t\tcheckUser: 'consumer',\n\t\t\temail: null,\n\t\t\tpassword: null,\n\t\t\ttoken: null\n\t\t};\n\t},\n\tmethods:{\n\t\tlogin() {\n\t\t\tlet frm = new FormData();\n\n\t\t\tfrm.append(\"emailCheckUser\", this.email + \":\" + this.checkUser);\n            frm.append('password', this.password);\n\n\t\t\tconsole.log(frm);\n\n            axios.post('http://localhost:8080/api/login', frm, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            })\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tif (res.data == \"\"){\n\t\t\t\t\talert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n\t\t\t\t\tconsole.log(\"....\");\n\t\t\t\t} else {\n\t\t\t\t\t// main으로 넘기기\n\t\t\t\t\tthis.$router.push({name: 'main', params: res.data.token});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\t\t\t/*\n\t\t\tconsole.log(loginObj);\n\t\t\taxios.post('http://localhost:8080/api/login', loginObj)\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tif (res.data == \"\"){\n\t\t\t\t\talert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n\t\t\t\t\tconsole.log(\"....\");\n\t\t\t\t} else {\n\t\t\t\t\t// main으로 넘기기\n\t\t\t\t\tthis.$router.push({name: 'main', params: res.data.token});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t},\n};\n\n</script>\n\n<style>\n/* https://github.com/vuetifyjs/vuetify/blob/next/packages/docs/src/examples/v-form/usage.vue */\n</style>\n\n"]},"metadata":{},"sourceType":"module"}