{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  // name: 'SignupForm',\n  data() {\n    return {\n      valid: false,\n      checkUser: 'consumer',\n      email: null,\n      password: null,\n      token: null,\n      show1: false,\n      show2: true,\n      // show3: false,\n      // show4: false,\n      emailRules: [v => !!v || 'E-mail을 입력해주세요.', v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.'],\n      // passwordRules: [\n      //     v => !!v || 'password is required',\n      //     v => v.length <= 6 || 'password must be less than 6 characters',\n      // ],\n      rules: {\n        required: value => !!value || '비밀번호를 입력해주세요.',\n        min: v => v.length >= 6 || '비밀번호는 최소 6글자 입니다',\n        emailMatch: () => `The email and password you entered don't match`\n      }\n    };\n  },\n\n  methods: {\n    login() {\n      // let frm = new FormData();\n      console.log(this.email);\n      console.log(this.checkUser); // frm.append(\"emailCheckUser\", this.email + \":\" + this.checkUser);\n      // frm.append('password', this.password);\n      // console.log(frm);\n\n      axios.post('http://localhost:8080/api/login', {\n        email: this.email,\n        checkUser: this.checkUser,\n        password: this.password\n      }).then(res => {\n        console.log(res);\n\n        if (res.data == \"\") {\n          alert(\"아이디 또는 비밀번호가 틀렸습니다!\");\n          console.log(\"....\");\n        } else {\n          // main으로 넘기기\n          this.$store.commit('TOKEN_SAVE', res.data.token);\n          console.log(this.$store.state.config.headers.TOKEN);\n          this.$router.push({\n            name: 'main'\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      /*\n      console.log(loginObj);\n      axios.post('http://localhost:8080/api/login', loginObj)\n      .then(res => {\n          console.log(res);\n          if (res.data == \"\"){\n              alert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n              console.log(\"....\");\n          } else {\n              // main으로 넘기기\n              this.$router.push({name: 'main', params: res.data.token});\n          }\n      })\n      .catch(err => {\n          console.log(err);\n      });\n      */\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsDA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACX;EACAC,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE,KADJ;MAEHC,SAAS,EAAE,UAFR;MAGHC,KAAK,EAAE,IAHJ;MAIHC,QAAQ,EAAE,IAJP;MAKHC,KAAK,EAAE,IALJ;MAMHC,KAAK,EAAE,KANJ;MAOHC,KAAK,EAAE,IAPJ;MAQH;MACA;MACAC,UAAU,EAAE,CACRC,KAAK,CAAC,CAACA,CAAF,IAAO,iBADJ,EAERA,KAAK,QAAQC,IAAR,CAAaD,CAAb,KAAmB,yBAFhB,CAVT;MAcH;MACA;MACA;MACA;MACAE,KAAK,EAAE;QACHC,QAAQ,EAAEC,KAAI,IAAK,CAAC,CAACA,KAAF,IAAW,eAD3B;QAEHC,GAAG,EAAEL,KAAKA,CAAC,CAACM,MAAF,IAAY,CAAZ,IAAiB,kBAFxB;QAGHC,UAAU,EAAE,MAAQ;MAHjB;IAlBJ,CAAP;EAwBH,CA3BU;;EA4BXC,OAAO,EAAE;IACLC,KAAK,GAAG;MACJ;MACAC,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;MACAgB,OAAO,CAACC,GAAR,CAAY,KAAKlB,SAAjB,EAHI,CAKJ;MACA;MAEA;;MAEAH,KAAK,CAACsB,IAAN,CAAW,iCAAX,EAA+C;QAAElB,KAAK,EAAE,KAAKA,KAAd;QAAqBD,SAAS,EAAE,KAAKA,SAArC;QAAgDE,QAAQ,EAAE,KAAKA;MAA/D,CAA/C,EACCkB,IADD,CACMC,GAAE,IAAK;QACTJ,OAAO,CAACC,GAAR,CAAYG,GAAZ;;QACA,IAAIA,GAAG,CAACvB,IAAJ,IAAY,EAAhB,EAAoB;UAChBwB,KAAK,CAAC,qBAAD,CAAL;UACAL,OAAO,CAACC,GAAR,CAAY,MAAZ;QACJ,CAHA,MAGO;UACH;UACA,KAAKK,MAAL,CAAYC,MAAZ,CAAmB,YAAnB,EAAiCH,GAAG,CAACvB,IAAJ,CAASK,KAA1C;UACAc,OAAO,CAACC,GAAR,CAAY,KAAKK,MAAL,CAAYE,KAAZ,CAAkBC,MAAlB,CAAyBC,OAAzB,CAAiCC,KAA7C;UACA,KAAKC,OAAL,CAAaC,IAAb,CAAkB;YAACC,IAAI,EAAE;UAAP,CAAlB;QACJ;MACH,CAZD,EAaCC,KAbD,CAaOC,GAAE,IAAK;QACVhB,OAAO,CAACC,GAAR,CAAYe,GAAZ;MACH,CAfD;MAiBA;;;;;;;;;;;;;;;;;IAiBJ;;EA7CK;AA5BE,CAAf","names":["axios","data","valid","checkUser","email","password","token","show1","show2","emailRules","v","test","rules","required","value","min","length","emailMatch","methods","login","console","log","post","then","res","alert","$store","commit","state","config","headers","TOKEN","$router","push","name","catch","err"],"sourceRoot":"","sources":["/home/realvue/src/views/login/login.vue"],"sourcesContent":["<template>\n\n    <div>\n        <header class=\"welcome-header1\">\n            <h1 class=\"welcome-header__title1\">따 과 농 과</h1>\n            <p class=\"welcome-header__text1\">{{this.$store.state.test.id}}</p>\n        </header>\n        <!-- @ 는 v-on 과 같은 표현식이다. 폼 내부에서 버튼을 누르면 submit 이벤트가 form 으로 전송되고 v-on:submit이 실행된다.\n\t\t이때 페이지가 새로고침되므로 .prevent를 통해 새로고침을 막고 methods의 함수롤 호출하게 한다. -->\n        <!-- <form @submit.prevent=\"submitForm\" class=\"login-form\">\n\n\t\t\t<div>\n\t\t\t\t<input class=\"login-form__input\" type=\"text\" id=\"name\" v-model=\"email\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input class=\"login-form__input\" type=\"password\" id=\"password\" v-model=\"password\" />\n\t\t\t</div> -->\n\n        <v-form ref=\"form\" v-model=\"valid\" lazy-validation @submit.prevent=\"submitForm\">\n            <v-text-field v-model=\"email\" :rules=\"emailRules\" label=\"E-mail\" required ></v-text-field>\n\n            <!-- <v-text-field v-model=\"password\" :rules=\"passwordRules\" label=\"Password\" type=\"password\" required>\n            </v-text-field> -->\n\n            <v-text-field v-model=\"password\" :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n                :rules=\"[rules.required, rules.min]\" :type=\"show1 ? 'text' : 'password'\" name=\"input-10-1\"\n                label=\"Password\" hint=\"비밀번호는 최소 6글자 입니다\" counter @click:append=\"show1 = !show1\"></v-text-field>\n\n            <div class=\"login_keep_wrap\" id=\"login_keep_wrap\">\n                <div class=\"keep_check\">\n                    <input type=\"checkbox\" id=\"keep\" name=\"nvlong\" class=\"input_keep\" value=\"on\">\n                    <label for=\"keep\" class=\"keep_text\">로그인 상태 유지</label>\n                    <br>\n                    <br>\n                    <input type=\"radio\" id=\"consumer\" value=\"consumer\" v-model=\"checkUser\">\n                    <label for=\"consumer\">소비자</label>\n                    <br>\n                    <input type=\"radio\" id=\"farm\" value=\"farm\" v-model=\"checkUser\">\n                    <label for=\"farm\">농가</label>\n                    <br>\n                </div>\n            </div>\n            <button class=\"login-form__btn\" type=\"submit\" @click=\"login()\">로그인</button>\n\n            <router-link to='/clause'>\n                <button class=\"login-form__btn\" type=\"submit\">회원가입</button>\n            </router-link>\n            <!-- <a class=\"login-form__a\" href=\"#\">아이디 찾기</a> -->\n        </v-form>\n    </div>\n</template>\n\n<script>\n\nimport axios from \"axios\"\n\nexport default {\n    // name: 'SignupForm',\n    data() {\n        return {\n            valid: false,\n            checkUser: 'consumer',\n            email: null,\n            password: null,\n            token: null,\n            show1: false,\n            show2: true,\n            // show3: false,\n            // show4: false,\n            emailRules: [\n                v => !!v || 'E-mail을 입력해주세요.',\n                v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.',\n            ],\n            // passwordRules: [\n            //     v => !!v || 'password is required',\n            //     v => v.length <= 6 || 'password must be less than 6 characters',\n            // ],\n            rules: {\n                required: value => !!value || '비밀번호를 입력해주세요.',\n                min: v => v.length >= 6 || '비밀번호는 최소 6글자 입니다',\n                emailMatch: () => (`The email and password you entered don't match`),\n            },  \n        };\n    },\n    methods: {\n        login() {\n            // let frm = new FormData();\n            console.log(this.email);\n            console.log(this.checkUser);\n\n            // frm.append(\"emailCheckUser\", this.email + \":\" + this.checkUser);\n            // frm.append('password', this.password);\n\n            // console.log(frm);\n\n            axios.post('http://localhost:8080/api/login',  { email: this.email, checkUser: this.checkUser, password: this.password})\n            .then(res => {\n                console.log(res);\n                if (res.data == \"\") {\n                    alert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n                    console.log(\"....\");\n                } else {\n                    // main으로 넘기기\n                    this.$store.commit('TOKEN_SAVE', res.data.token);\n                    console.log(this.$store.state.config.headers.TOKEN);\n                    this.$router.push({name: 'main'});\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n            /*\n            console.log(loginObj);\n            axios.post('http://localhost:8080/api/login', loginObj)\n            .then(res => {\n                console.log(res);\n                if (res.data == \"\"){\n                    alert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n                    console.log(\"....\");\n                } else {\n                    // main으로 넘기기\n                    this.$router.push({name: 'main', params: res.data.token});\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n            */\n        }\n    },\n}\n</script>\n\n<style>\n\n\n    /* \n\thttps://github.com/vuetifyjs/vuetify/blob/next/packages/docs/src/examples/v-form/usage.vue \n\thttps://minu0807.tistory.com/82 아이디 유효성체크\n\t*/\n</style>"]},"metadata":{},"sourceType":"module"}