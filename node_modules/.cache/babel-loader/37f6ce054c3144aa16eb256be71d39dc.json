{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: 'SignupForm',\n\n  data() {\n    return {\n      checkUser: 'consumer',\n      email: null,\n      password: null,\n      token: null,\n      emailRules: [v => !!v || 'E-mail is required', v => /.+@.+/.test(v) || 'E-mail must be valid'],\n      nameRules: [v => !!v || 'Name is required', v => v.length <= 10 || 'Name must be less than 10 characters']\n    };\n  },\n\n  methods: {\n    login() {\n      let frm = new FormData();\n      frm.append(\"emailCheckUser\", this.email + \":\" + this.checkUser);\n      frm.append('password', this.password);\n      console.log(frm);\n      axios.post('http://localhost:8080/api/login', frm, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        console.log(res);\n\n        if (res.data == \"\") {\n          alert(\"아이디 또는 비밀번호가 틀렸습니다!\");\n          console.log(\"....\");\n        } else {\n          // main으로 넘기기\n          this.$router.push({\n            name: 'main',\n            params: res.data.token\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      /*\n      console.log(loginObj);\n      axios.post('http://localhost:8080/api/login', loginObj)\n      .then(res => {\n          console.log(res);\n          if (res.data == \"\"){\n              alert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n              console.log(\"....\");\n          } else {\n              // main으로 넘기기\n              this.$router.push({name: 'main', params: res.data.token});\n          }\n      })\n      .catch(err => {\n          console.log(err);\n      });\n      */\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmDI,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACXC,IAAI,EAAE,YADK;;EAEXC,IAAI,GAAG;IACH,OAAO;MACHC,SAAS,EAAE,UADR;MAEHC,KAAK,EAAE,IAFJ;MAGHC,QAAQ,EAAE,IAHP;MAIHC,KAAK,EAAE,IAJJ;MAKfC,UAAU,EAAE,CACXC,KAAK,CAAC,CAACA,CAAF,IAAO,oBADD,EAEXA,KAAK,QAAQC,IAAR,CAAaD,CAAb,KAAmB,sBAFb,CALG;MASfE,SAAS,EAAE,CACPF,KAAK,CAAC,CAACA,CAAF,IAAO,kBADL,EAEPA,KAAKA,CAAC,CAACG,MAAF,IAAY,EAAZ,IAAkB,sCAFhB;IATI,CAAP;EAeH,CAlBU;;EAmBXC,OAAO,EAAE;IACLC,KAAK,GAAG;MACJ,IAAIC,GAAE,GAAI,IAAIC,QAAJ,EAAV;MAEAD,GAAG,CAACE,MAAJ,CAAW,gBAAX,EAA6B,KAAKZ,KAAL,GAAa,GAAb,GAAmB,KAAKD,SAArD;MACAW,GAAG,CAACE,MAAJ,CAAW,UAAX,EAAuB,KAAKX,QAA5B;MAEAY,OAAO,CAACC,GAAR,CAAYJ,GAAZ;MAEAd,KAAK,CAACmB,IAAN,CAAW,iCAAX,EAA8CL,GAA9C,EAAmD;QAC/CM,OAAO,EAAE;UACL,gBAAgB;QADX;MADsC,CAAnD,EAKKC,IALL,CAKUC,GAAE,IAAK;QACTL,OAAO,CAACC,GAAR,CAAYI,GAAZ;;QACA,IAAIA,GAAG,CAACpB,IAAJ,IAAY,EAAhB,EAAoB;UAChBqB,KAAK,CAAC,qBAAD,CAAL;UACAN,OAAO,CAACC,GAAR,CAAY,MAAZ;QACJ,CAHA,MAGO;UACH;UACA,KAAKM,OAAL,CAAaC,IAAb,CAAkB;YAAExB,IAAI,EAAE,MAAR;YAAgByB,MAAM,EAAEJ,GAAG,CAACpB,IAAJ,CAASI;UAAjC,CAAlB;QACJ;MACH,CAdL,EAeKqB,KAfL,CAeWC,GAAE,IAAK;QACVX,OAAO,CAACC,GAAR,CAAYU,GAAZ;MACH,CAjBL;MAmBA;;;;;;;;;;;;;;;;;IAiBJ;;EA7CK;AAnBE,CAAf","names":["axios","name","data","checkUser","email","password","token","emailRules","v","test","nameRules","length","methods","login","frm","FormData","append","console","log","post","headers","then","res","alert","$router","push","params","catch","err"],"sourceRoot":"","sources":["/home/realvue/src/views/login/login.vue"],"sourcesContent":["<template>\n\n    <div>\n        <header class=\"welcome-header1\">\n            <h1 class=\"welcome-header__title1\">따 과 농 과</h1>\n            <p class=\"welcome-header__text1\">{{this.$store.state.test.id}}</p>\n        </header>\n        <!-- @ 는 v-on 과 같은 표현식이다. 폼 내부에서 버튼을 누르면 submit 이벤트가 form 으로 전송되고 v-on:submit이 실행된다.\n\t\t이때 페이지가 새로고침되므로 .prevent를 통해 새로고침을 막고 methods의 함수롤 호출하게 한다. -->\n        <!-- <form @submit.prevent=\"submitForm\" class=\"login-form\">\n\n\t\t\t<div>\n\t\t\t\t<input class=\"login-form__input\" type=\"text\" id=\"name\" v-model=\"email\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input class=\"login-form__input\" type=\"password\" id=\"password\" v-model=\"password\" />\n\t\t\t</div> -->\n\n        <v-form ref=\"form\" v-model=\"valid\" lazy-validation @submit.prevent=\"submitForm\">\n            <v-text-field v-model=\"email\" :rules=\"emailRules\" label=\"E-mail\" required></v-text-field>\n\n            <v-text-field v-model=\"password\" :rules=\"passwordRules\" label=\"Password\" type=\"password\" required>\n            </v-text-field>\n\n\n\n            <div class=\"login_keep_wrap\" id=\"login_keep_wrap\">\n                <div class=\"keep_check\">\n                    <input type=\"checkbox\" id=\"keep\" name=\"nvlong\" class=\"input_keep\" value=\"on\">\n                    <label for=\"keep\" class=\"keep_text\">로그인 상태 유지</label>\n                    <br>\n                    <br>\n                    <input type=\"radio\" id=\"consumer\" value=\"consumer\" v-model=\"checkUser\">\n                    <label for=\"consumer\">소비자</label>\n                    <br>\n                    <input type=\"radio\" id=\"farm\" value=\"farm\" v-model=\"checkUser\">\n                    <label for=\"farm\">농가</label>\n                    <br>\n                </div>\n            </div>\n            <button class=\"login-form__btn\" type=\"submit\" @click=\"login()\">로그인</button>\n\n            <router-link to='/clause'>\n                <button class=\"login-form__btn\" type=\"submit\">회원가입</button>\n            </router-link>\n            <!-- <a class=\"login-form__a\" href=\"#\">아이디 찾기</a> -->\n        </v-form>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\"\n\n    export default {\n        name: 'SignupForm',\n        data() {\n            return {\n                checkUser: 'consumer',\n                email: null,\n                password: null,\n                token: null,\n\t\t\t\temailRules: [\n\t\t\t\t\tv => !!v || 'E-mail is required',\n\t\t\t\t\tv => /.+@.+/.test(v) || 'E-mail must be valid',\n\t\t\t\t],\n\t\t\t\tnameRules: [\n        v => !!v || 'Name is required',\n        v => v.length <= 10 || 'Name must be less than 10 characters',\n      ],\n\t\t\t\t\n            };\n        },\n        methods: {\n            login() {\n                let frm = new FormData();\n\n                frm.append(\"emailCheckUser\", this.email + \":\" + this.checkUser);\n                frm.append('password', this.password);\n\n                console.log(frm);\n\n                axios.post('http://localhost:8080/api/login', frm, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                })\n                    .then(res => {\n                        console.log(res);\n                        if (res.data == \"\") {\n                            alert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n                            console.log(\"....\");\n                        } else {\n                            // main으로 넘기기\n                            this.$router.push({ name: 'main', params: res.data.token });\n                        }\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    });\n\n                /*\n                console.log(loginObj);\n                axios.post('http://localhost:8080/api/login', loginObj)\n                .then(res => {\n                    console.log(res);\n                    if (res.data == \"\"){\n                        alert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n                        console.log(\"....\");\n                    } else {\n                        // main으로 넘기기\n                        this.$router.push({name: 'main', params: res.data.token});\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n                */\n            }\n        },\n    };\n\n</script>\n\n<style>\n    /* \n\thttps://github.com/vuetifyjs/vuetify/blob/next/packages/docs/src/examples/v-form/usage.vue \n\thttps://minu0807.tistory.com/82 아이디 유효성체크\n\t*/\n</style>"]},"metadata":{},"sourceType":"module"}