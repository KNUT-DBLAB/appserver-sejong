{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: 'SignupForm',\n\n  data() {\n    return {\n      c_name: null,\n      c_email: null,\n      c_passwd: null,\n      c_phonenum: null,\n      dialog: false,\n      state: 'ins',\n      authList: [{\n        name: '관리자',\n        value: 'A'\n      }, {\n        name: '일반 사용자',\n        value: 'M'\n      }],\n      user_id: '',\n      user_id_rule: [v => !!v || '아이디는 필수 입력사항입니다.', v => /^[a-zA-Z0-9]*$/.test(v) || '아이디는 영문+숫자만 입력 가능합니다.', v => !(v && v.length >= 15) || '아이디는 15자 이상 입력할 수 없습니다.'],\n      user_nm: '',\n      user_nm_rule: [v => !!v || '이름은 필수 입력사항입니다.', v => !(v && v.length >= 30) || '이름은 30자 이상 입력할 수 없습니다.', v => !/[~!@#$%^&*()_+|<>?:{}]/.test(v) || '이름에는 특수문자를 사용할 수 없습니다.'],\n      user_pw: '',\n      user_pw_chk: '',\n      user_pw_rule: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.'],\n      user_pw_rule2: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.', v => v === this.user_pw || '패스워드가 일치하지 않습니다.'],\n      user_auth: '',\n      user_auth_rule: [v => !!v || '권한은 필수 선택 사항입니다.'],\n      user_desc: '',\n      user_desc_rule: [v => !(v && v.length >= 100) || '설명은 100자 이상 입력할 수 업습니다.']\n    };\n  },\n\n  methods: {\n    async save() {\n      const validate = this.$refs.form.validate();\n\n      if (validate) {\n        if (confirm('저장하시겠습니까?')) {\n          const params = {\n            user_id: this.user_id,\n            user_nm: this.user_nm,\n            user_pw: this.user_pw,\n            user_auth_code: this.user_auth.value,\n            user_auth_nm: this.user_auth.name,\n            user_desc: this.user_desc\n          };\n\n          if (this.state == 'upd') {\n            params._id = this.user_info._id;\n            params.user_mk_dt = this.user_info.user_mk_dt;\n          }\n\n          try {\n            const url = this.state == 'ins' ? 'setting/user/insertUser' : 'setting/user/updateUser';\n            const rs = await this.$store.dispatch(url, params);\n\n            if (rs.data.result.error == false) {\n              this.$store.dispatch('setting/user/initUserList');\n              this.close();\n            }\n          } catch (err) {\n            alert(err);\n          }\n        }\n      }\n    },\n\n    close() {\n      this.dialog = false;\n      this.state = 'ins';\n      this.$refs.form.reset();\n    }\n\n  },\n\n  existEmail(c_email) {\n    console.log(c_email);\n    this.$store.dispatch('existEmail', c_email);\n  },\n\n  emailRules: [v => !!v || 'E-mail을 입력해주세요.', v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.'],\n  c_passwd: '',\n  c_passwd_chk: '',\n  user_pw_rule: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.'],\n  user_pw_rule2: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.', v => v === this.user_pw || '패스워드가 일치하지 않습니다.'],\n\n  signupConsumer(signupObj) {\n    console.log(this.$store.state.existEmail);\n\n    if (this.$store.state.existEmail) {\n      alert('이메일 중복 확인을 완료해주세요!');\n    } else {\n      console.log(signupObj);\n      axios.post('http://localhost:8080/api/signupConsumer', signupObj).then(res => {\n        console.log(res);\n\n        if (res.data == 0) {\n          alert(\"회원가입 실패..\");\n        } else {\n          alert(\"회원가입 성공..\"); // main으로 넘기기\n\n          console.log(\"main으로!!\");\n          console.log(this.token);\n          console.log(res.data.token);\n          this.token = res.data.token;\n          this.$router.push({\n            name: 'main',\n            params: this.token\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","c_name","c_email","c_passwd","c_phonenum","dialog","state","authList","value","user_id","user_id_rule","v","test","length","user_nm","user_nm_rule","user_pw","user_pw_chk","user_pw_rule","user_pw_rule2","user_auth","user_auth_rule","user_desc","user_desc_rule","methods","save","validate","$refs","form","confirm","params","user_auth_code","user_auth_nm","_id","user_info","user_mk_dt","url","rs","$store","dispatch","result","error","close","err","alert","reset","existEmail","console","log","emailRules","c_passwd_chk","signupConsumer","signupObj","post","then","res","token","$router","push","catch"],"sourceRoot":"","sources":["/home/realvue/src/views/test.vue"],"sourcesContent":["<template>\n<v-form ref=\"form\" lazy-validation>\n  <v-row>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_id\" \n        label=\"아이디*\" \n        :rules=\"user_id_rule\" \n        :disabled=\"state == 'ins' ? false : true\"\n        required\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_nm\" \n        label=\"이름*\" \n        :rules=\"user_nm_rule\" \n        required\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_pw\" \n        label=\"비밀번호*\" \n        type=\"password\" \n        :rules=\"user_pw_rule\"\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_pw_chk\" \n        label=\"비밀번호 확인*\" \n        type=\"password\" \n        :rules=\"user_pw_rule2\"\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-select \n      \tv-model=\"user_auth\" \n        label=\"권한*\" \n        :items=\"authList\" \n        item-text=\"name\" \n        item-value=\"value\" \n        return-object\n        :rules=\"user_auth_rule\"\n        ></v-select>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_desc\" \n        label=\"설명\" \n        :rules=\"user_desc_rule\"\n        ></v-text-field>\n    </v-col>\n  </v-row>\n</v-form>\n</template>\n\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n\tname: 'SignupForm',\n\tdata() {\n\t\treturn {\n            c_name: null,\n\t\t\tc_email: null,\n\t\t\tc_passwd: null,\n\t\t\tc_phonenum: null,\n            dialog: false,\n      state: 'ins',\n      authList: [\n        { name: '관리자', value: 'A'},\n        { name: '일반 사용자', value: 'M'}\n      ],\n      user_id: '',\n      user_id_rule: [\n        v => !!v || '아이디는 필수 입력사항입니다.',\n        v => /^[a-zA-Z0-9]*$/.test(v) || '아이디는 영문+숫자만 입력 가능합니다.',\n        v => !( v && v.length >= 15) || '아이디는 15자 이상 입력할 수 없습니다.'\n      ],\n      user_nm: '',\n      user_nm_rule: [\n        v => !!v || '이름은 필수 입력사항입니다.',\n        v => !(v && v.length >= 30) || '이름은 30자 이상 입력할 수 없습니다.',\n        v => !/[~!@#$%^&*()_+|<>?:{}]/.test(v) || '이름에는 특수문자를 사용할 수 없습니다.'\n      ],\n      user_pw: '',\n      user_pw_chk: '',\n      user_pw_rule: [\n        v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n        v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n      ],\n      user_pw_rule2: [\n        v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n        v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n        v => v === this.user_pw || '패스워드가 일치하지 않습니다.'\n      ],\n      user_auth: '',\n      user_auth_rule: [\n        v => !!v || '권한은 필수 선택 사항입니다.'\n      ],\n      user_desc: '',\n      user_desc_rule: [\n        v => !(v && v.length >= 100) || '설명은 100자 이상 입력할 수 업습니다.'\n      ]\n    }\n  },\n\tmethods:{\n        async save() {\n      const validate = this.$refs.form.validate();\n      if (validate) {\n        if (confirm ('저장하시겠습니까?')) {\n          const params = {\n            user_id: this.user_id,\n            user_nm: this.user_nm,\n            user_pw: this.user_pw,\n            user_auth_code: this.user_auth.value,\n            user_auth_nm: this.user_auth.name,\n            user_desc: this.user_desc\n          }\n          if (this.state == 'upd') {\n            params._id = this.user_info._id;\n            params.user_mk_dt = this.user_info.user_mk_dt;\n  \n          }\n          try {\n            const url = (this.state == 'ins' ? 'setting/user/insertUser' : 'setting/user/updateUser');\n            const rs = await this.$store.dispatch(url, params);\n            if (rs.data.result.error == false) {\n              this.$store.dispatch('setting/user/initUserList');\n              this.close();\n            }\n          } catch (err) {\n            alert(err);\n          }\n        }\n      }\n    },\n    close() {\n      this.dialog = false;\n      this.state = 'ins';\n      this.$refs.form.reset();\n    }\n  },\n        existEmail(c_email) {\n            console.log(c_email);\n\t\t\tthis.$store.dispatch('existEmail', c_email)\n\t\t},\n        emailRules: [\n            v => !!v || 'E-mail을 입력해주세요.',\n            v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.',\n        ],\n        c_passwd: '',\n        c_passwd_chk: '',\n        user_pw_rule: [\n            v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n            v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n        ],\n        user_pw_rule2: [\n            v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n            v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n            v => v === this.user_pw || '패스워드가 일치하지 않습니다.'\n        ],\n\n\t\tsignupConsumer(signupObj) {\n            console.log(this.$store.state.existEmail);\n            if(this.$store.state.existEmail){\n                alert('이메일 중복 확인을 완료해주세요!')\n            } else {\n                console.log(signupObj);\n                axios.post('http://localhost:8080/api/signupConsumer', signupObj) \n                .then(res => {\n                    console.log(res);\n                    if (res.data == 0){\n                        alert(\"회원가입 실패..\")\n                    } else {\n                        alert(\"회원가입 성공..\")\n                        // main으로 넘기기\n                        console.log(\"main으로!!\");\n                        console.log(this.token);\n                        console.log(res.data.token);\n                        this.token = res.data.token;\n                        this.$router.push({name: 'main', params: this.token});\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n            }\n\t\t}\n\t}\n;\n\n</script>\n\n\n\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}