{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: 'SignupForm',\n\n  data() {\n    return {\n      c_name: null,\n      c_email: null,\n      c_passwd: null,\n      c_phonenum: null\n    };\n  },\n\n  methods: {\n    existEmail(c_email) {\n      console.log(c_email);\n      this.$store.dispatch('existEmail', c_email);\n    },\n\n    user_pw_rule: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.'],\n    user_pw_rule2: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.', v => v === this.user_pw || '패스워드가 일치하지 않습니다.'],\n\n    // emailRule:(c_email) {\n    //     v => !!v || '이메일을 입력해주세요.',\n    //     v => { \n    // const replaceV = v.replace(/(\\s*)/g, '')\n    // const pattern = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/\n    // return pattern.test(replaceV) || '이메일 형식으로 입력해주세요'\n    //     }\n    // },\n    signupConsumer(signupObj) {\n      console.log(this.$store.state.existEmail);\n\n      if (this.$store.state.existEmail) {\n        alert('이메일 중복 확인을 완료해주세요!');\n      } else {\n        console.log(signupObj);\n        axios.post('http://localhost:8080/api/signupConsumer', signupObj).then(res => {\n          console.log(res);\n\n          if (res.data == 0) {\n            alert(\"회원가입 실패..\");\n          } else {\n            alert(\"회원가입 성공..\"); // main으로 넘기기\n\n            console.log(\"main으로!!\");\n            console.log(this.token);\n            console.log(res.data.token);\n            this.token = res.data.token;\n            this.$router.push({\n              name: 'main',\n              params: this.token\n            });\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2BA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACdC,IAAI,EAAE,YADQ;;EAEdC,IAAI,GAAG;IACN,OAAO;MACGC,MAAM,EAAE,IADX;MAENC,OAAO,EAAE,IAFH;MAGNC,QAAQ,EAAE,IAHJ;MAINC,UAAU,EAAE;IAJN,CAAP;EAMA,CATa;;EAUdC,OAAO,EAAC;IACDC,UAAU,CAACJ,OAAD,EAAU;MAChBK,OAAO,CAACC,GAAR,CAAYN,OAAZ;MACT,KAAKO,MAAL,CAAYC,QAAZ,CAAqB,YAArB,EAAmCR,OAAnC;IACA,CAJM;;IAKDS,YAAY,EAAE,CACVC,KAAK,KAAKC,KAAL,KAAe,KAAf,GAAuB,CAAC,CAACD,CAAF,IAAO,mBAA9B,GAAoD,IAD/C,EAEVA,KAAK,EAAEA,KAAKA,CAAC,CAACE,MAAF,IAAY,EAAnB,KAA0B,0BAFrB,CALb;IASDC,aAAa,EAAE,CACXH,KAAK,KAAKC,KAAL,KAAe,KAAf,GAAuB,CAAC,CAACD,CAAF,IAAO,mBAA9B,GAAoD,IAD9C,EAEXA,KAAK,EAAEA,KAAKA,CAAC,CAACE,MAAF,IAAY,EAAnB,KAA0B,0BAFpB,EAGXF,KAAKA,MAAM,KAAKI,OAAX,IAAsB,kBAHhB,CATd;;IAeD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACNC,cAAc,CAACC,SAAD,EAAY;MAChBX,OAAO,CAACC,GAAR,CAAY,KAAKC,MAAL,CAAYI,KAAZ,CAAkBP,UAA9B;;MACA,IAAG,KAAKG,MAAL,CAAYI,KAAZ,CAAkBP,UAArB,EAAgC;QAC5Ba,KAAK,CAAC,oBAAD,CAAL;MACJ,CAFA,MAEO;QACHZ,OAAO,CAACC,GAAR,CAAYU,SAAZ;QACApB,KAAK,CAACsB,IAAN,CAAW,0CAAX,EAAuDF,SAAvD,EACCG,IADD,CACMC,GAAE,IAAK;UACTf,OAAO,CAACC,GAAR,CAAYc,GAAZ;;UACA,IAAIA,GAAG,CAACtB,IAAJ,IAAY,CAAhB,EAAkB;YACdmB,KAAK,CAAC,WAAD,CAAL;UACJ,CAFA,MAEO;YACHA,KAAK,CAAC,WAAD,CAAL,CADG,CAEH;;YACAZ,OAAO,CAACC,GAAR,CAAY,UAAZ;YACAD,OAAO,CAACC,GAAR,CAAY,KAAKe,KAAjB;YACAhB,OAAO,CAACC,GAAR,CAAYc,GAAG,CAACtB,IAAJ,CAASuB,KAArB;YACA,KAAKA,KAAL,GAAaD,GAAG,CAACtB,IAAJ,CAASuB,KAAtB;YACA,KAAKC,OAAL,CAAaC,IAAb,CAAkB;cAAC1B,IAAI,EAAE,MAAP;cAAe2B,MAAM,EAAE,KAAKH;YAA5B,CAAlB;UACJ;QACH,CAdD,EAeCI,KAfD,CAeOC,GAAE,IAAK;UACVrB,OAAO,CAACC,GAAR,CAAYoB,GAAZ;QACH,CAjBD;MAkBJ;IACV;;EAhDO;AAVM,CAAf","names":["axios","name","data","c_name","c_email","c_passwd","c_phonenum","methods","existEmail","console","log","$store","dispatch","user_pw_rule","v","state","length","user_pw_rule2","user_pw","signupConsumer","signupObj","alert","post","then","res","token","$router","push","params","catch","err"],"sourceRoot":"","sources":["/home/realvue/src/views/login/signup.vue"],"sourcesContent":["<template>\n    <div>\n        <header class=\"welcome-header\">\n            <h1 class=\"welcome-header__title\">회 원 가 입</h1>\n        </header>\n        <div id =\"signup\">\n        <form @submit.prevent=\"SignupForm\" class=\"signup\">\n            <input v-model=\"c_name\" class=\"login-form__input\" type=\"text\" name=\"name\" required placeholder=\"이름\" >\n            <input v-model=\"c_email\" class=\"login-form__input\" type=\"text\" name=\"email\" required placeholder=\"이메일\" > \n            <button class=\"login-form__btn_right\" @click=\"existEmail(c_email)\">이메일 중복 검사</button>\n\t\t\t<!-- <input class=\"login-form__input\" type=\"email\" required placeholder=\"이메일\"> -->\n            <input v-model=\"c_passwd\" class=\"login-form__input\" type=\"password\" name=\"password\" id=\"password\" required placeholder=\"비밀번호\" minlength=\"6\" rules=\"emailRule\">\n            <input class=\"login-form__input\" type=\"password\" name=\"passwordcheck\" id=\"passwordcheck\" required placeholder=\"비밀번호확인\"\n                minlength=\"6\">\n            <input v-model=\"c_phonenum\" class=\"login-form__input\" type=\"number\" name=\"phonenum\" required placeholder=\"휴대폰번호\" minlength=\"11\" maxlength=\"11\">\n\t\t<!-- 인증번호 받는 부분 추가 요망 -->\n            <!-- <input class=\"login-form__btn_right\" type=\"submit\" value=\"인증번호 받기\">\n            <input class=\"login-form__input\" type=\"text\" required placeholder=\"인증번호를 입력해주세요\">\n            <input class=\"login-form__btn_right\" type=\"submit\" value=\"인 증 확 인\"> -->\n\t\t\t<button class=\"login-form__btn_right\" @click=\"signupConsumer({c_name, c_email, c_passwd, c_phonenum})\">다음</button>\n        </form>\n        </div>\n    </div>\n</template>\n\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n\tname: 'SignupForm',\n\tdata() {\n\t\treturn {\n            c_name: null,\n\t\t\tc_email: null,\n\t\t\tc_passwd: null,\n\t\t\tc_phonenum: null\n\t\t};\n\t},\n\tmethods:{\n        existEmail(c_email) {\n            console.log(c_email);\n\t\t\tthis.$store.dispatch('existEmail', c_email)\n\t\t},\n        user_pw_rule: [\n            v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n            v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n        ],\n        user_pw_rule2: [\n            v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n            v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n            v => v === this.user_pw || '패스워드가 일치하지 않습니다.'\n        ],\n        \n        // emailRule:(c_email) {\n        //     v => !!v || '이메일을 입력해주세요.',\n        //     v => { \n        // const replaceV = v.replace(/(\\s*)/g, '')\n        // const pattern = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/\n        // return pattern.test(replaceV) || '이메일 형식으로 입력해주세요'\n        //     }\n        // },\n\t\tsignupConsumer(signupObj) {\n            console.log(this.$store.state.existEmail);\n            if(this.$store.state.existEmail){\n                alert('이메일 중복 확인을 완료해주세요!')\n            } else {\n                console.log(signupObj);\n                axios.post('http://localhost:8080/api/signupConsumer', signupObj) \n                .then(res => {\n                    console.log(res);\n                    if (res.data == 0){\n                        alert(\"회원가입 실패..\")\n                    } else {\n                        alert(\"회원가입 성공..\")\n                        // main으로 넘기기\n                        console.log(\"main으로!!\");\n                        console.log(this.token);\n                        console.log(res.data.token);\n                        this.token = res.data.token;\n                        this.$router.push({name: 'main', params: this.token});\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n            }\n\t\t}\n\t},\n};\n\n</script>\n\n\n\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}