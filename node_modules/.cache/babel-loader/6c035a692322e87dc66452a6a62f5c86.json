{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelRadio as _vModelRadio, withDirectives as _withDirectives, withCtx as _withCtx, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"welcome-header1\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"welcome-header__title1\"\n}, \"따 과 농 과\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"welcome-header__text1\"\n};\nconst _hoisted_4 = {\n  class: \"login_keep_wrap\",\n  id: \"login_keep_wrap\"\n};\nconst _hoisted_5 = {\n  class: \"keep_check\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\",\n  id: \"keep\",\n  name: \"nvlong\",\n  class: \"input_keep\",\n  value: \"on\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"keep\",\n  class: \"keep_text\"\n}, \"로그인 상태 유지\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"consumer\"\n}, \"소비자\", -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"farm\"\n}, \"농가\", -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"login-form__btn\",\n  type: \"submit\"\n}, \"회원가입\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  const _component_v_form = _resolveComponent(\"v-form\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"header\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", _hoisted_3, _toDisplayString(this.$store.state.test.id), 1\n  /* TEXT */\n  )]), _createCommentVNode(\" @ 는 v-on 과 같은 표현식이다. 폼 내부에서 버튼을 누르면 submit 이벤트가 form 으로 전송되고 v-on:submit이 실행된다.\\n\\t\\t이때 페이지가 새로고침되므로 .prevent를 통해 새로고침을 막고 methods의 함수롤 호출하게 한다. \"), _createCommentVNode(\" <form @submit.prevent=\\\"submitForm\\\" class=\\\"login-form\\\">\\n\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<input class=\\\"login-form__input\\\" type=\\\"text\\\" id=\\\"name\\\" v-model=\\\"email\\\" />\\n\\t\\t\\t</div>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<input class=\\\"login-form__input\\\" type=\\\"password\\\" id=\\\"password\\\" v-model=\\\"password\\\" />\\n\\t\\t\\t</div> \"), _createVNode(_component_v_form, {\n    ref: \"form\",\n    modelValue: _ctx.valid,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.valid = $event),\n    \"lazy-validation\": \"\",\n    onSubmit: _withModifiers(_ctx.submitForm, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_text_field, {\n      modelValue: $data.email,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n      rules: $data.emailRules,\n      label: \"E-mail\",\n      required: \"\"\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n      modelValue: $data.password,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n      rules: _ctx.passwordRules,\n      label: \"Password\",\n      type: \"password\",\n      required: \"\"\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"rules\"]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _hoisted_7, _hoisted_8, _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      id: \"consumer\",\n      value: \"consumer\",\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.checkUser = $event)\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelRadio, $data.checkUser]]), _hoisted_10, _hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      id: \"farm\",\n      value: \"farm\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.checkUser = $event)\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelRadio, $data.checkUser]]), _hoisted_12, _hoisted_13])]), _createElementVNode(\"button\", {\n      class: \"login-form__btn\",\n      type: \"submit\",\n      onClick: _cache[4] || (_cache[4] = $event => $options.login())\n    }, \"로그인\"), _createVNode(_component_router_link, {\n      to: \"/clause\"\n    }, {\n      default: _withCtx(() => [_hoisted_14]),\n      _: 1\n      /* STABLE */\n\n    }), _createCommentVNode(\" <a class=\\\"login-form__a\\\" href=\\\"#\\\">아이디 찾기</a> \")]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\", \"onSubmit\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","id","type","name","value","for","_createElementBlock","_hoisted_2","_toDisplayString","$store","state","test","_createCommentVNode","_createVNode","_component_v_form","ref","_ctx","$event","onSubmit","_component_v_text_field","$data","rules","label","required","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","onClick","$options","_component_router_link","to","_hoisted_14"],"sourceRoot":"","sources":["/home/realvue/src/views/login/login.vue"],"sourcesContent":["<template>\n\n    <div>\n        <header class=\"welcome-header1\">\n            <h1 class=\"welcome-header__title1\">따 과 농 과</h1>\n            <p class=\"welcome-header__text1\">{{this.$store.state.test.id}}</p>\n        </header>\n        <!-- @ 는 v-on 과 같은 표현식이다. 폼 내부에서 버튼을 누르면 submit 이벤트가 form 으로 전송되고 v-on:submit이 실행된다.\n\t\t이때 페이지가 새로고침되므로 .prevent를 통해 새로고침을 막고 methods의 함수롤 호출하게 한다. -->\n        <!-- <form @submit.prevent=\"submitForm\" class=\"login-form\">\n\n\t\t\t<div>\n\t\t\t\t<input class=\"login-form__input\" type=\"text\" id=\"name\" v-model=\"email\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input class=\"login-form__input\" type=\"password\" id=\"password\" v-model=\"password\" />\n\t\t\t</div> -->\n\n        <v-form ref=\"form\" v-model=\"valid\" lazy-validation @submit.prevent=\"submitForm\">\n            <v-text-field v-model=\"email\" :rules=\"emailRules\" label=\"E-mail\" required></v-text-field>\n\n            <v-text-field v-model=\"password\" :rules=\"passwordRules\" label=\"Password\" type=\"password\" required>\n            </v-text-field>\n\n\n\n            <div class=\"login_keep_wrap\" id=\"login_keep_wrap\">\n                <div class=\"keep_check\">\n                    <input type=\"checkbox\" id=\"keep\" name=\"nvlong\" class=\"input_keep\" value=\"on\">\n                    <label for=\"keep\" class=\"keep_text\">로그인 상태 유지</label>\n                    <br>\n                    <br>\n                    <input type=\"radio\" id=\"consumer\" value=\"consumer\" v-model=\"checkUser\">\n                    <label for=\"consumer\">소비자</label>\n                    <br>\n                    <input type=\"radio\" id=\"farm\" value=\"farm\" v-model=\"checkUser\">\n                    <label for=\"farm\">농가</label>\n                    <br>\n                </div>\n            </div>\n            <button class=\"login-form__btn\" type=\"submit\" @click=\"login()\">로그인</button>\n\n            <router-link to='/clause'>\n                <button class=\"login-form__btn\" type=\"submit\">회원가입</button>\n            </router-link>\n            <!-- <a class=\"login-form__a\" href=\"#\">아이디 찾기</a> -->\n        </v-form>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\"\n\n    export default {\n        name: 'SignupForm',\n        data() {\n            return {\n                checkUser: 'consumer',\n                email: null,\n                password: null,\n                token: null,\n\t\t\t\temailRules: [\n\t\t\t\t\tv => !!v || 'E-mail is required',\n\t\t\t\t\tv => /.+@.+/.test(v) || 'E-mail must be valid',\n\t\t\t\t],\n\t\t\t\tnameRules: [\n        v => !!v || 'Name is required',\n        v => v.length <= 10 || 'Name must be less than 10 characters',\n      ],\n\t\t\t\t\n            };\n        },\n        methods: {\n            login() {\n                let frm = new FormData();\n\n                frm.append(\"emailCheckUser\", this.email + \":\" + this.checkUser);\n                frm.append('password', this.password);\n\n                console.log(frm);\n\n                axios.post('http://localhost:8080/api/login', frm, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                })\n                    .then(res => {\n                        console.log(res);\n                        if (res.data == \"\") {\n                            alert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n                            console.log(\"....\");\n                        } else {\n                            // main으로 넘기기\n                            this.$router.push({ name: 'main', params: res.data.token });\n                        }\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    });\n\n                /*\n                console.log(loginObj);\n                axios.post('http://localhost:8080/api/login', loginObj)\n                .then(res => {\n                    console.log(res);\n                    if (res.data == \"\"){\n                        alert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n                        console.log(\"....\");\n                    } else {\n                        // main으로 넘기기\n                        this.$router.push({name: 'main', params: res.data.token});\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n                */\n            }\n        },\n    };\n\n</script>\n\n<style>\n    /* \n\thttps://github.com/vuetifyjs/vuetify/blob/next/packages/docs/src/examples/v-form/usage.vue \n\thttps://minu0807.tistory.com/82 아이디 유효성체크\n\t*/\n</style>"]},"metadata":{},"sourceType":"module"}