{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"result\",\n      key: comment.id\n    }, [_createElementVNode(\"div\", null, _toDisplayString(comment.email), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", null, _toDisplayString(comment.id), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createVNode($setup[\"InfiniteLoading\"], {\n    comments: $setup.comments,\n    onInfinite: $setup.load\n  }, null, 8\n  /* PROPS */\n  , [\"comments\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gFACEA,oBAGMC,SAHN,EAGM,IAHN,EAGMC,YAHgCC,eAGhC,EAHqBC,OAAmB,IAAZ;yBAAlCJ,oBAGM,KAHN,EAGM;MAHDK,KAAK,EAAC,QAGL;MAH2CC,GAAG,EAAEF,OAAO,CAACG;IAGxD,CAHN,GACEC,oBAA8B,KAA9B,EAA8B,IAA9B,EAA8BC,iBAAtBL,OAAO,CAACM,KAAc,CAA9B,EAAqB;IAAA;IAArB,GACAF,oBAA2B,KAA3B,EAA2B,IAA3B,EAA2BC,iBAAnBL,OAAO,CAACG,EAAW,CAA3B,EAAkB;IAAA;IAAlB,EAFF;GAGM,CAHN;;EAAA,IAIAI,aAAyDR,yBAAzD,EAAyD;IAAvCS,QAAQ,EAAET,eAA6B;IAAlBU,UAAQ,EAAEV;EAAQ,CAAzD;;EAAA","names":["_createElementBlock","_Fragment","_renderList","$setup","comment","class","key","id","_createElementVNode","_toDisplayString","email","_createVNode","comments","onInfinite"],"sourceRoot":"","sources":["/home/realvue/src/views/test.vue"],"sourcesContent":["<template>\n  <div class=\"result\" v-for=\"comment in comments\" :key=\"comment.id\">\n    <div>{{ comment.email }}</div>\n    <div>{{ comment.id }}</div>\n  </div>\n  <InfiniteLoading :comments=\"comments\" @infinite=\"load\" />\n</template>\n\n<script setup>\n  import { ref } from \"vue\";\n  import InfiniteLoading from \"v3-infinite-loading\";\n\n\n  let comments = ref([]);\n  let page = 1;\n  const load = async $state => {\n    console.log(\"loading...\");\n\n    try {\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/comments?_limit=10&_page=\" + page\n      );\n      const json = await response.json();\n      if (json.length < 10) $state.complete();\n      else {\n        comments.value.push(...json);\n        $state.loaded();\n      }\n      page++;\n    } catch (error) {\n      $state.error();\n    }\n  };\n</script>\n\n<style>\n  #app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    margin-top: 60px;\n  }\n\n  .result {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-weight: 300;\n    width: 400px;\n    padding: 10px;\n    text-align: center;\n    margin: 0 auto 10px auto;\n    background: #eceef0;\n    border-radius: 10px;\n  }\n</style>"]},"metadata":{},"sourceType":"module"}