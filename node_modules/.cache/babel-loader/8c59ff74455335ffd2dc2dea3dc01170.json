{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: 'SignupForm',\n\n  data() {\n    return {\n      c_name: null,\n      c_email: null,\n      c_passwd: null,\n      c_phonenum: null,\n      dialog: false,\n      state: 'ins',\n      authList: [{\n        name: '관리자',\n        value: 'A'\n      }, {\n        name: '일반 사용자',\n        value: 'M'\n      }],\n      user_id: '',\n      user_id_rule: [v => !!v || '아이디는 필수 입력사항입니다.', v => /^[a-zA-Z0-9]*$/.test(v) || '아이디는 영문+숫자만 입력 가능합니다.', v => !(v && v.length >= 15) || '아이디는 15자 이상 입력할 수 없습니다.'],\n      user_nm: '',\n      user_nm_rule: [v => !!v || '이름은 필수 입력사항입니다.', v => !(v && v.length >= 30) || '이름은 30자 이상 입력할 수 없습니다.', v => !/[~!@#$%^&*()_+|<>?:{}]/.test(v) || '이름에는 특수문자를 사용할 수 없습니다.'],\n      user_pw: '',\n      user_pw_chk: '',\n      user_pw_rule: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.'],\n      user_pw_rule2: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.', v => v === this.user_pw || '패스워드가 일치하지 않습니다.'],\n      user_auth: '',\n      user_auth_rule: [v => !!v || '권한은 필수 선택 사항입니다.'],\n      user_desc: '',\n      user_desc_rule: [v => !(v && v.length >= 100) || '설명은 100자 이상 입력할 수 업습니다.']\n    };\n  },\n\n  methods: {\n    existEmail(c_email) {\n      console.log(c_email);\n      this.$store.dispatch('existEmail', c_email);\n    },\n\n    emailRules: [v => !!v || 'E-mail을 입력해주세요.', v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.'],\n    c_passwd: '',\n    c_passwd_chk: '',\n    user_pw_rule: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.'],\n    user_pw_rule2: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.', v => v === this.user_pw || '패스워드가 일치하지 않습니다.'],\n\n    // emailRule:(c_email) {\n    //     v => !!v || '이메일을 입력해주세요.',\n    //     v => { \n    // const replaceV = v.replace(/(\\s*)/g, '')\n    // const pattern = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/\n    // return pattern.test(replaceV) || '이메일 형식으로 입력해주세요'\n    //     }\n    // },\n    signupConsumer(signupObj) {\n      console.log(this.$store.state.existEmail);\n\n      if (this.$store.state.existEmail) {\n        alert('이메일 중복 확인을 완료해주세요!');\n      } else {\n        console.log(signupObj);\n        axios.post('http://localhost:8080/api/signupConsumer', signupObj).then(res => {\n          console.log(res);\n\n          if (res.data == 0) {\n            alert(\"회원가입 실패..\");\n          } else {\n            alert(\"회원가입 성공..\"); // main으로 넘기기\n\n            console.log(\"main으로!!\");\n            console.log(this.token);\n            console.log(res.data.token);\n            this.token = res.data.token;\n            this.$router.push({\n              name: 'main',\n              params: this.token\n            });\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","c_name","c_email","c_passwd","c_phonenum","dialog","state","authList","value","user_id","user_id_rule","v","test","length","user_nm","user_nm_rule","user_pw","user_pw_chk","user_pw_rule","user_pw_rule2","user_auth","user_auth_rule","user_desc","user_desc_rule","methods","existEmail","console","log","$store","dispatch","emailRules","c_passwd_chk","signupConsumer","signupObj","alert","post","then","res","token","$router","push","params","catch","err"],"sourceRoot":"","sources":["/home/realvue/src/views/test.vue"],"sourcesContent":["<template>\n<v-form ref=\"form\" lazy-validation>\n  <v-row>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_id\" \n        label=\"아이디*\" \n        :rules=\"user_id_rule\" \n        :disabled=\"state == 'ins' ? false : true\"\n        required\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_nm\" \n        label=\"이름*\" \n        :rules=\"user_nm_rule\" \n        required\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_pw\" \n        label=\"비밀번호*\" \n        type=\"password\" \n        :rules=\"user_pw_rule\"\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_pw_chk\" \n        label=\"비밀번호 확인*\" \n        type=\"password\" \n        :rules=\"user_pw_rule2\"\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-select \n      \tv-model=\"user_auth\" \n        label=\"권한*\" \n        :items=\"authList\" \n        item-text=\"name\" \n        item-value=\"value\" \n        return-object\n        :rules=\"user_auth_rule\"\n        ></v-select>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_desc\" \n        label=\"설명\" \n        :rules=\"user_desc_rule\"\n        ></v-text-field>\n    </v-col>\n  </v-row>\n</v-form>\n</template>\n\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n\tname: 'SignupForm',\n\tdata() {\n\t\treturn {\n            c_name: null,\n\t\t\tc_email: null,\n\t\t\tc_passwd: null,\n\t\t\tc_phonenum: null,\n            dialog: false,\n      state: 'ins',\n      authList: [\n        { name: '관리자', value: 'A'},\n        { name: '일반 사용자', value: 'M'}\n      ],\n      user_id: '',\n      user_id_rule: [\n        v => !!v || '아이디는 필수 입력사항입니다.',\n        v => /^[a-zA-Z0-9]*$/.test(v) || '아이디는 영문+숫자만 입력 가능합니다.',\n        v => !( v && v.length >= 15) || '아이디는 15자 이상 입력할 수 없습니다.'\n      ],\n      user_nm: '',\n      user_nm_rule: [\n        v => !!v || '이름은 필수 입력사항입니다.',\n        v => !(v && v.length >= 30) || '이름은 30자 이상 입력할 수 없습니다.',\n        v => !/[~!@#$%^&*()_+|<>?:{}]/.test(v) || '이름에는 특수문자를 사용할 수 없습니다.'\n      ],\n      user_pw: '',\n      user_pw_chk: '',\n      user_pw_rule: [\n        v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n        v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n      ],\n      user_pw_rule2: [\n        v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n        v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n        v => v === this.user_pw || '패스워드가 일치하지 않습니다.'\n      ],\n      user_auth: '',\n      user_auth_rule: [\n        v => !!v || '권한은 필수 선택 사항입니다.'\n      ],\n      user_desc: '',\n      user_desc_rule: [\n        v => !(v && v.length >= 100) || '설명은 100자 이상 입력할 수 업습니다.'\n      ]\n    }\n  },\n\tmethods:{\n        \n        existEmail(c_email) {\n            console.log(c_email);\n\t\t\tthis.$store.dispatch('existEmail', c_email)\n\t\t},\n        emailRules: [\n            v => !!v || 'E-mail을 입력해주세요.',\n            v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.',\n        ],\n        c_passwd: '',\n        c_passwd_chk: '',\n        user_pw_rule: [\n            v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n            v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n        ],\n        user_pw_rule2: [\n            v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n            v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n            v => v === this.user_pw || '패스워드가 일치하지 않습니다.'\n        ],\n        \n        // emailRule:(c_email) {\n        //     v => !!v || '이메일을 입력해주세요.',\n        //     v => { \n        // const replaceV = v.replace(/(\\s*)/g, '')\n        // const pattern = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/\n        // return pattern.test(replaceV) || '이메일 형식으로 입력해주세요'\n        //     }\n        // },\n\t\tsignupConsumer(signupObj) {\n            console.log(this.$store.state.existEmail);\n            if(this.$store.state.existEmail){\n                alert('이메일 중복 확인을 완료해주세요!')\n            } else {\n                console.log(signupObj);\n                axios.post('http://localhost:8080/api/signupConsumer', signupObj) \n                .then(res => {\n                    console.log(res);\n                    if (res.data == 0){\n                        alert(\"회원가입 실패..\")\n                    } else {\n                        alert(\"회원가입 성공..\")\n                        // main으로 넘기기\n                        console.log(\"main으로!!\");\n                        console.log(this.token);\n                        console.log(res.data.token);\n                        this.token = res.data.token;\n                        this.$router.push({name: 'main', params: this.token});\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n            }\n\t\t}\n\t},\n};\n\n</script>\n\n\n\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}