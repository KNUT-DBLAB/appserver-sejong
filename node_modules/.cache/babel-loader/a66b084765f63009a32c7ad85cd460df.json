{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: 'SignupForm',\n\n  data() {\n    return {\n      c_name: null,\n      c_email: null,\n      c_passwd: null,\n      c_phonenum: null,\n      dialog: false,\n      state: 'ins',\n      authList: [{\n        name: '관리자',\n        value: 'A'\n      }, {\n        name: '일반 사용자',\n        value: 'M'\n      }],\n      c_email: '',\n      emailRules: [v => !!v || '이메일은 필수 입력사항입니다.', v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.'],\n      c_name: '',\n      c_name_rule: [v => !!v || '이름은 필수 입력사항입니다.', v => !(v && v.length >= 10) || '이름은 10자 이상 입력할 수 없습니다.', v => !/[~!@#$%^&*()_+|<>?:{}]/.test(v) || '이름에는 특수문자를 사용할 수 없습니다.'],\n      c_passwd: '',\n      c_passwd_chk: '',\n      c_passwd_rule: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.'],\n      c_passwd_rule2: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.', v => v === this.c_passwd || '패스워드가 일치하지 않습니다.'],\n      user_auth: '',\n      user_auth_rule: [v => !!v || '권한은 필수 선택 사항입니다.'],\n      c_phonenum: '',\n      c_phonenum_rule: [v => this.state === 'ins' ? !!v || '핸드폰 번호는 필수 입력사항입니다.' : true, v => !(v && v.length >= 12) || '핸드폰 번호는 12자 이상 입력할 수 업습니다.', v => /[0-9]/.test(v) || '숫자만 입력해주세요']\n    };\n  },\n\n  methods: {\n    existEmail(c_email) {\n      console.log(c_email);\n      this.$store.dispatch('existEmail', c_email);\n    },\n\n    async save() {\n      const validate = this.$refs.form.validate();\n\n      if (validate) {\n        if (confirm('저장하시겠습니까?')) {\n          const params = {\n            user_id: this.user_id,\n            user_nm: this.user_nm,\n            user_pw: this.user_pw,\n            user_auth_code: this.user_auth.value,\n            user_auth_nm: this.user_auth.name,\n            user_desc: this.user_desc\n          };\n\n          if (this.state == 'upd') {\n            params._id = this.user_info._id;\n            params.user_mk_dt = this.user_info.user_mk_dt;\n          }\n\n          try {\n            if (rs.data.result.error == false) {}\n          } catch (err) {\n            alert(err);\n          }\n        }\n      }\n    },\n\n    close() {\n      this.dialog = false;\n      this.state = 'ins';\n      this.$refs.form.reset();\n    }\n\n  },\n\n  signupConsumer(signupObj) {\n    console.log(this.$store.state.existEmail);\n\n    if (this.$store.state.existEmail) {\n      alert('이메일 중복 확인을 완료해주세요!');\n    } else {\n      console.log(signupObj);\n      axios.post('http://localhost:8080/api/signupConsumer', signupObj).then(res => {\n        console.log(res);\n\n        if (res.data == 0) {\n          alert(\"회원가입 실패..\");\n        } else {\n          alert(\"회원가입 성공..\"); // main으로 넘기기\n\n          console.log(\"main으로!!\");\n          console.log(this.token);\n          console.log(res.data.token);\n          this.token = res.data.token;\n          this.$router.push({\n            name: 'main',\n            params: this.token\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","c_name","c_email","c_passwd","c_phonenum","dialog","state","authList","value","emailRules","v","test","c_name_rule","length","c_passwd_chk","c_passwd_rule","c_passwd_rule2","user_auth","user_auth_rule","c_phonenum_rule","methods","existEmail","console","log","$store","dispatch","save","validate","$refs","form","confirm","params","user_id","user_nm","user_pw","user_auth_code","user_auth_nm","user_desc","_id","user_info","user_mk_dt","rs","result","error","err","alert","close","reset","signupConsumer","signupObj","post","then","res","token","$router","push","catch"],"sourceRoot":"","sources":["/home/realvue/src/views/test.vue"],"sourcesContent":["<template>\n<header class=\"welcome-header\">\n    <h1 class=\"welcome-header__title\">회 원 가 입</h1>\n</header>\n    <v-form ref=\"form\" lazy-validation @submit.prevent=\"SignupForm\">\n        <v-row>\n            <v-col cols=\"12\">\n            <v-text-field v-model=\"c_name\" label=\"이름*\" :rules=\"c_name_rule\" required></v-text-field>\n            </v-col>\n            <v-col cols=\"12\">\n                <v-text-field v-model=\"c_email\" label=\"이메일*\" :rules=\"emailRules\"\n                    :disabled=\"state == 'ins' ? false : true\" required></v-text-field>\n            </v-col>\n\n            <button class=\"login-form__btn_right\" @click=\"existEmail(c_email)\">이메일 중복 검사</button>\n\n            <v-col cols=\"12\">\n                <v-text-field v-model=\"c_passwd\" label=\"비밀번호*\" type=\"password\" :rules=\"c_passwd_rule\"></v-text-field>\n            </v-col>\n            <v-col cols=\"12\">\n                <v-text-field v-model=\"c_passwd_chk\" label=\"비밀번호 확인*\" type=\"password\" :rules=\"c_passwd_rule2\">\n                </v-text-field>\n            </v-col>\n            <v-col cols=\"12\">\n                <v-text-field v-model=\"c_phonenum\" label=\"핸드폰 번호\" :rules=\"c_phonenum_rule\"></v-text-field>\n            </v-col>\n            <v-col cols=\"12\">\n                <v-select v-model=\"user_auth\" label=\"권한*\" :items=\"authList\" item-text=\"name\" item-value=\"value\"\n                    return-object :rules=\"user_auth_rule\"></v-select>\n            </v-col>\n        </v-row>\n\n        <button class=\"login-form__btn_right\"\n            @click=\"signupConsumer({c_name, c_email, c_passwd, c_phonenum})\">다음</button>\n    </v-form>\n</template>\n\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n    name: 'SignupForm',\n    data() {\n        return {\n            c_name: null,\n            c_email: null,\n            c_passwd: null,\n            c_phonenum: null,\n            dialog: false,\n            state: 'ins',\n            authList: [\n                { name: '관리자', value: 'A' },\n                { name: '일반 사용자', value: 'M' }\n            ],\n            c_email: '',\n            emailRules: [\n                v => !!v || '이메일은 필수 입력사항입니다.',\n                v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.',\n            ],\n            c_name: '',\n            c_name_rule: [\n                v => !!v || '이름은 필수 입력사항입니다.',\n                v => !(v && v.length >= 10) || '이름은 10자 이상 입력할 수 없습니다.',\n                v => !/[~!@#$%^&*()_+|<>?:{}]/.test(v) || '이름에는 특수문자를 사용할 수 없습니다.'\n            ],\n            c_passwd: '',\n            c_passwd_chk: '',\n            c_passwd_rule: [\n                v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n                v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n            ],\n            c_passwd_rule2: [\n                v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n                v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n                v => v === this.c_passwd || '패스워드가 일치하지 않습니다.'\n            ],\n            user_auth: '',\n            user_auth_rule: [\n                v => !!v || '권한은 필수 선택 사항입니다.'\n            ],\n            c_phonenum: '',\n            c_phonenum_rule: [\n                v => this.state === 'ins' ? !!v || '핸드폰 번호는 필수 입력사항입니다.' : true,\n                v => !(v && v.length >= 12) || '핸드폰 번호는 12자 이상 입력할 수 업습니다.',\n                v => /[0-9]/.test(v) || '숫자만 입력해주세요'\n            ] \n        }\n    },\n    methods:{\n    existEmail(c_email) {\n        console.log(c_email);\n        this.$store.dispatch('existEmail', c_email)\n    },\n    async save() {\n      const validate = this.$refs.form.validate();\n      if (validate) {\n        if (confirm ('저장하시겠습니까?')) {\n          const params = {\n            user_id: this.user_id,\n            user_nm: this.user_nm,\n            user_pw: this.user_pw,\n            user_auth_code: this.user_auth.value,\n            user_auth_nm: this.user_auth.name,\n            user_desc: this.user_desc\n          }\n          if (this.state == 'upd') {\n            params._id = this.user_info._id;\n            params.user_mk_dt = this.user_info.user_mk_dt;\n          }\n          try {\n\n            if (rs.data.result.error == false) {\n\n            }\n          } catch (err) {\n            alert(err);\n          }\n        }\n      }\n    },\n    close() {\n      this.dialog = false;\n      this.state = 'ins';\n      this.$refs.form.reset();\n    }\n  },\n    signupConsumer(signupObj) {\n\n        console.log(this.$store.state.existEmail);\n        if (this.$store.state.existEmail) {\n            alert('이메일 중복 확인을 완료해주세요!')\n        } else {\n            console.log(signupObj);\n            axios.post('http://localhost:8080/api/signupConsumer', signupObj)\n                .then(res => {\n                    console.log(res);\n                    if (res.data == 0) {\n                        alert(\"회원가입 실패..\")\n                    } else {\n                        alert(\"회원가입 성공..\")\n                        // main으로 넘기기\n                        console.log(\"main으로!!\");\n                        console.log(this.token);\n                        console.log(res.data.token);\n                        this.token = res.data.token;\n                        this.$router.push({ name: 'main', params: this.token });\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n    }}\n\n\n\n</script>\n\n\n\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}