{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: 'SignupForm',\n\n  data() {\n    return {\n      checkUser: 'consumer',\n      email: null,\n      password: null,\n      token: null\n    };\n  },\n\n  methods: {\n    login() {\n      let frm = new FormData();\n      frm.append(\"emailCheckUser\", this.email + \":\" + this.checkUser);\n      frm.append('password', this.password);\n      console.log(frm);\n      axios.post('http://localhost:8080/api/login', frm, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        console.log(res);\n\n        if (res.data == \"\") {\n          alert(\"아이디 또는 비밀번호가 틀렸습니다!\");\n          console.log(\"....\");\n        } else {\n          // main으로 넘기기\n          this.$router.push({\n            name: 'main',\n            params: res.data.token\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      /*\n      console.log(loginObj);\n      axios.post('http://localhost:8080/api/login', loginObj)\n      .then(res => {\n      \tconsole.log(res);\n      \tif (res.data == \"\"){\n      \t\talert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n      \t\tconsole.log(\"....\");\n      \t} else {\n      \t\t// main으로 넘기기\n      \t\tthis.$router.push({name: 'main', params: res.data.token});\n      \t}\n      })\n      .catch(err => {\n      \tconsole.log(err);\n      });\n      */\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACdC,IAAI,EAAE,YADQ;;EAEdC,IAAI,GAAG;IACN,OAAO;MACNC,SAAS,EAAE,UADL;MAENC,KAAK,EAAE,IAFD;MAGNC,QAAQ,EAAE,IAHJ;MAINC,KAAK,EAAE;IAJD,CAAP;EAMA,CATa;;EAUdC,OAAO,EAAC;IACPC,KAAK,GAAG;MACP,IAAIC,GAAE,GAAI,IAAIC,QAAJ,EAAV;MAEAD,GAAG,CAACE,MAAJ,CAAW,gBAAX,EAA6B,KAAKP,KAAL,GAAa,GAAb,GAAmB,KAAKD,SAArD;MACSM,GAAG,CAACE,MAAJ,CAAW,UAAX,EAAuB,KAAKN,QAA5B;MAETO,OAAO,CAACC,GAAR,CAAYJ,GAAZ;MAEST,KAAK,CAACc,IAAN,CAAW,iCAAX,EAA8CL,GAA9C,EAAmD;QAC/CM,OAAO,EAAE;UACL,gBAAgB;QADX;MADsC,CAAnD,EAKRC,IALQ,CAKHC,GAAE,IAAK;QACZL,OAAO,CAACC,GAAR,CAAYI,GAAZ;;QACA,IAAIA,GAAG,CAACf,IAAJ,IAAY,EAAhB,EAAmB;UAClBgB,KAAK,CAAC,qBAAD,CAAL;UACAN,OAAO,CAACC,GAAR,CAAY,MAAZ;QACD,CAHA,MAGO;UACN;UACA,KAAKM,OAAL,CAAaC,IAAb,CAAkB;YAACnB,IAAI,EAAE,MAAP;YAAeoB,MAAM,EAAEJ,GAAG,CAACf,IAAJ,CAASI;UAAhC,CAAlB;QACD;MACA,CAdQ,EAeRgB,KAfQ,CAeFC,GAAE,IAAK;QACbX,OAAO,CAACC,GAAR,CAAYU,GAAZ;MACA,CAjBQ;MAmBT;;;;;;;;;;;;;;;;;IAiBD;;EA7CO;AAVM,CAAf","names":["axios","name","data","checkUser","email","password","token","methods","login","frm","FormData","append","console","log","post","headers","then","res","alert","$router","push","params","catch","err"],"sourceRoot":"","sources":["/home/realvue/src/views/login/login.vue"],"sourcesContent":["<template>\n\n\t<div>\n\t<header class=\"welcome-header1\">\n        <h1 class=\"welcome-header__title1\">따 과 농 과</h1>\n        <p class=\"welcome-header__text1\">{{this.$store.state.test.id}}</p>\n    </header>\n\t\t<!-- @ 는 v-on 과 같은 표현식이다. 폼 내부에서 버튼을 누르면 submit 이벤트가 form 으로 전송되고 v-on:submit이 실행된다.\n\t\t이때 페이지가 새로고침되므로 .prevent를 통해 새로고침을 막고 methods의 함수롤 호출하게 한다. -->\n\t\t<!-- <form @submit.prevent=\"submitForm\" class=\"login-form\">\n\n\t\t\t<div>\n\t\t\t\t<input class=\"login-form__input\" type=\"text\" id=\"name\" v-model=\"email\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input class=\"login-form__input\" type=\"password\" id=\"password\" v-model=\"password\" />\n\t\t\t</div> -->\n\n\t<v-form\n    ref=\"form\"\n    v-model=\"valid\"\n    lazy-validation\n\t@submit.prevent=\"submitForm\"\n  >\n          <v-text-field\n            v-model=\"email\"\n            :rules=\"emailRules\"\n            label=\"E-mail\"\n            required\n          ></v-text-field>\n\n\t\t    <v-text-field\n            v-model=\"password\"\n            :rules=\"passwordRules\"\n            label=\"Password\"\n\t\t\ttype=\"password\"\n            required\n          ></v-text-field>\n\t\t  \n\n\n    <div class=\"login_keep_wrap\" id=\"login_keep_wrap\">\n        <div class=\"keep_check\">\n            <input type=\"checkbox\" id=\"keep\" name=\"nvlong\" class=\"input_keep\" value=\"on\">\n            <label for=\"keep\" class=\"keep_text\">로그인 상태 유지</label>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<input type=\"radio\" id=\"consumer\" value=\"consumer\" v-model=\"checkUser\">\n\t\t\t<label for=\"consumer\">소비자</label>\n\t\t\t<br>\n\t\t\t<input type=\"radio\" id=\"farm\" value=\"farm\" v-model=\"checkUser\">\n\t\t\t<label for=\"farm\">농가</label>\n\t\t\t<br>\n        </div>\n    </div>\n\t\t<button class=\"login-form__btn\" type=\"submit\" @click=\"login()\" >로그인</button>\n\t\t\n\t\t<router-link to='/clause'>\n\t\t\t<button class=\"login-form__btn\" type=\"submit\">회원가입</button>\n\t\t</router-link>\n\t\t\t<a class=\"login-form__a\" href=\"#\">아이디 찾기</a>\n\t\t</v-form>\n\t</div>\n</template>\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n\tname: 'SignupForm',\n\tdata() {\n\t\treturn {\n\t\t\tcheckUser: 'consumer',\n\t\t\temail: null,\n\t\t\tpassword: null,\n\t\t\ttoken: null\n\t\t};\n\t},\n\tmethods:{\n\t\tlogin() {\n\t\t\tlet frm = new FormData();\n\n\t\t\tfrm.append(\"emailCheckUser\", this.email + \":\" + this.checkUser);\n            frm.append('password', this.password);\n\n\t\t\tconsole.log(frm);\n\n            axios.post('http://localhost:8080/api/login', frm, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            })\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tif (res.data == \"\"){\n\t\t\t\t\talert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n\t\t\t\t\tconsole.log(\"....\");\n\t\t\t\t} else {\n\t\t\t\t\t// main으로 넘기기\n\t\t\t\t\tthis.$router.push({name: 'main', params: res.data.token});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\t\t\t/*\n\t\t\tconsole.log(loginObj);\n\t\t\taxios.post('http://localhost:8080/api/login', loginObj)\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tif (res.data == \"\"){\n\t\t\t\t\talert(\"아이디 또는 비밀번호가 틀렸습니다!\")\n\t\t\t\t\tconsole.log(\"....\");\n\t\t\t\t} else {\n\t\t\t\t\t// main으로 넘기기\n\t\t\t\t\tthis.$router.push({name: 'main', params: res.data.token});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t},\n};\n\n</script>\n\n<style>\n/* https://github.com/vuetifyjs/vuetify/blob/next/packages/docs/src/examples/v-form/usage.vue */\n</style>\n\n"]},"metadata":{},"sourceType":"module"}