{"ast":null,"code":"export default {\n  data() {\n    return {\n      dialog: false,\n      state: 'ins',\n      authList: [{\n        name: '관리자',\n        value: 'A'\n      }, {\n        name: '일반 사용자',\n        value: 'M'\n      }],\n      user_id: '',\n      user_id_rule: [v => !!v || '아이디는 필수 입력사항입니다.', v => /^[a-zA-Z0-9]*$/.test(v) || '아이디는 영문+숫자만 입력 가능합니다.', v => !(v && v.length >= 15) || '아이디는 15자 이상 입력할 수 없습니다.'],\n      user_nm: '',\n      user_nm_rule: [v => !!v || '이름은 필수 입력사항입니다.', v => !(v && v.length >= 30) || '이름은 30자 이상 입력할 수 없습니다.', v => !/[~!@#$%^&*()_+|<>?:{}]/.test(v) || '이름에는 특수문자를 사용할 수 없습니다.'],\n      user_pw: '',\n      user_pw_chk: '',\n      user_pw_rule: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.'],\n      user_pw_rule2: [v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true, v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.', v => v === this.user_pw || '패스워드가 일치하지 않습니다.'],\n      user_auth: '',\n      user_auth_rule: [v => !!v || '권한은 필수 선택 사항입니다.'],\n      user_desc: '',\n      user_desc_rule: [v => !(v && v.length >= 100) || '설명은 100자 이상 입력할 수 업습니다.']\n    };\n  },\n\n  methods: {\n    async save() {\n      const validate = this.$refs.form.validate();\n\n      if (validate) {\n        if (confirm('저장하시겠습니까?')) {\n          const params = {\n            user_id: this.user_id,\n            user_nm: this.user_nm,\n            user_pw: this.user_pw,\n            user_auth_code: this.user_auth.value,\n            user_auth_nm: this.user_auth.name,\n            user_desc: this.user_desc\n          };\n\n          if (this.state == 'upd') {\n            params._id = this.user_info._id;\n            params.user_mk_dt = this.user_info.user_mk_dt;\n          }\n\n          try {\n            const url = this.state == 'ins' ? 'setting/user/insertUser' : 'setting/user/updateUser';\n            const rs = await this.$store.dispatch(url, params);\n\n            if (rs.data.result.error == false) {\n              this.$store.dispatch('setting/user/initUserList');\n              this.close();\n            } else {\n              signupConsumer(signupObj);\n              console.log(this.$store.state.existEmail);\n\n              if (this.$store.state.existEmail) {\n                alert('이메일 중복 확인을 완료해주세요!');\n              } else {\n                console.log(signupObj);\n                axios.post('http://localhost:8080/api/signupConsumer', signupObj).then(res => {\n                  console.log(res);\n\n                  if (res.data == 0) {\n                    alert(\"회원가입 실패..\");\n                  } else {\n                    alert(\"회원가입 성공..\"); // main으로 넘기기\n\n                    console.log(\"main으로!!\");\n                    console.log(res.data.token);\n                    this.$store.commit('TOKEN_SAVE', res.data.token);\n                    this.$router.push({\n                      name: 'main',\n                      params: res.data.token\n                    });\n                  }\n                }).catch(err => {\n                  console.log(err);\n                });\n              }\n            }\n          } catch (err) {\n            alert(err);\n          }\n        }\n      }\n    },\n\n    close() {\n      this.dialog = false;\n      this.state = 'ins';\n      this.$refs.form.reset();\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["data","dialog","state","authList","name","value","user_id","user_id_rule","v","test","length","user_nm","user_nm_rule","user_pw","user_pw_chk","user_pw_rule","user_pw_rule2","user_auth","user_auth_rule","user_desc","user_desc_rule","methods","save","validate","$refs","form","confirm","params","user_auth_code","user_auth_nm","_id","user_info","user_mk_dt","url","rs","$store","dispatch","result","error","close","signupConsumer","signupObj","console","log","existEmail","alert","axios","post","then","res","token","commit","$router","push","catch","err","reset"],"sourceRoot":"","sources":["/home/realvue/src/views/test.vue"],"sourcesContent":["<template>\n<v-form ref=\"form\" lazy-validation>\n  <v-row>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_id\" \n        label=\"아이디*\" \n        :rules=\"user_id_rule\" \n        :disabled=\"state == 'ins' ? false : true\"\n        required\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_nm\" \n        label=\"이름*\" \n        :rules=\"user_nm_rule\" \n        required\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_pw\" \n        label=\"비밀번호*\" \n        type=\"password\" \n        :rules=\"user_pw_rule\"\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_pw_chk\" \n        label=\"비밀번호 확인*\" \n        type=\"password\" \n        :rules=\"user_pw_rule2\"\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-select \n      \tv-model=\"user_auth\" \n        label=\"권한*\" \n        :items=\"authList\" \n        item-text=\"name\" \n        item-value=\"value\" \n        return-object\n        :rules=\"user_auth_rule\"\n        ></v-select>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_desc\" \n        label=\"설명\" \n        :rules=\"user_desc_rule\"\n        ></v-text-field>\n    </v-col>\n  </v-row>\n          <button class=\"login-form__btn_right\"\n            @click=\"signupConsumer({c_name, c_email, c_passwd, c_phonenum})\">다음</button>\n</v-form>  \n</template>\n\n<script>\nexport default {\n    data() {\n    return {\n      dialog: false,\n      state: 'ins',\n      authList: [\n        { name: '관리자', value: 'A'},\n        { name: '일반 사용자', value: 'M'}\n      ],\n      user_id: '',\n      user_id_rule: [\n        v => !!v || '아이디는 필수 입력사항입니다.',\n        v => /^[a-zA-Z0-9]*$/.test(v) || '아이디는 영문+숫자만 입력 가능합니다.',\n        v => !( v && v.length >= 15) || '아이디는 15자 이상 입력할 수 없습니다.'\n      ],\n      user_nm: '',\n      user_nm_rule: [\n        v => !!v || '이름은 필수 입력사항입니다.',\n        v => !(v && v.length >= 30) || '이름은 30자 이상 입력할 수 없습니다.',\n        v => !/[~!@#$%^&*()_+|<>?:{}]/.test(v) || '이름에는 특수문자를 사용할 수 없습니다.'\n      ],\n      user_pw: '',\n      user_pw_chk: '',\n      user_pw_rule: [\n        v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n        v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n      ],\n      user_pw_rule2: [\n        v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n        v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n        v => v === this.user_pw || '패스워드가 일치하지 않습니다.'\n      ],\n      user_auth: '',\n      user_auth_rule: [\n        v => !!v || '권한은 필수 선택 사항입니다.'\n      ],\n      user_desc: '',\n      user_desc_rule: [\n        v => !(v && v.length >= 100) || '설명은 100자 이상 입력할 수 업습니다.'\n      ]\n    }\n  },\n  methods: {\n    async save() {\n      const validate = this.$refs.form.validate();\n      if (validate) {\n        if (confirm ('저장하시겠습니까?')) {\n          const params = {\n            user_id: this.user_id,\n            user_nm: this.user_nm,\n            user_pw: this.user_pw,\n            user_auth_code: this.user_auth.value,\n            user_auth_nm: this.user_auth.name,\n            user_desc: this.user_desc\n          }\n          if (this.state == 'upd') {\n            params._id = this.user_info._id;\n            params.user_mk_dt = this.user_info.user_mk_dt;\n  \n          }\n          try {\n            const url = (this.state == 'ins' ? 'setting/user/insertUser' : 'setting/user/updateUser');\n            const rs = await this.$store.dispatch(url, params);\n            if (rs.data.result.error == false) {\n              this.$store.dispatch('setting/user/initUserList');\n              this.close();\n            } else {\n                \t\tsignupConsumer(signupObj) \n            console.log(this.$store.state.existEmail);\n            if(this.$store.state.existEmail){\n                alert('이메일 중복 확인을 완료해주세요!')\n            } else {\n                console.log(signupObj);\n                axios.post('http://localhost:8080/api/signupConsumer', signupObj) \n                .then(res => {\n                    console.log(res);\n                    if (res.data == 0){\n                        alert(\"회원가입 실패..\")\n                    } else {\n                        alert(\"회원가입 성공..\")\n                        // main으로 넘기기\n                        console.log(\"main으로!!\");\n                        console.log(res.data.token);\n                        this.$store.commit('TOKEN_SAVE', res.data.token);\n                        this.$router.push({name: 'main', params: res.data.token});\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n            \n\t\t}\n            }\n          } catch (err) {\n            alert(err);\n          }\n        }\n      }\n    },\n    close() {\n      this.dialog = false;\n      this.state = 'ins';\n      this.$refs.form.reset();\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}