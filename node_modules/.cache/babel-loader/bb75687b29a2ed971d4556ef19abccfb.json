{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n\n  const _component_v_col = _resolveComponent(\"v-col\");\n\n  const _component_v_select = _resolveComponent(\"v-select\");\n\n  const _component_v_row = _resolveComponent(\"v-row\");\n\n  const _component_v_form = _resolveComponent(\"v-form\");\n\n  return _openBlock(), _createBlock(_component_v_form, {\n    ref: \"form\",\n    \"lazy-validation\": \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: $data.user_id,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user_id = $event),\n          label: \"아이디*\",\n          rules: _ctx.user_id_rule,\n          disabled: $data.state == 'ins' ? false : true,\n          required: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"rules\", \"disabled\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: $data.user_nm,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user_nm = $event),\n          label: \"이름*\",\n          rules: $data.user_nm_rule,\n          required: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"rules\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: $data.user_pw,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user_pw = $event),\n          label: \"비밀번호*\",\n          type: \"password\",\n          rules: $data.user_pw_rule\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"rules\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: $data.user_pw_chk,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.user_pw_chk = $event),\n          label: \"비밀번호 확인*\",\n          type: \"password\",\n          rules: $data.user_pw_rule2\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"rules\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_select, {\n          modelValue: $data.user_auth,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.user_auth = $event),\n          label: \"권한*\",\n          items: \"authList\",\n          \"item-text\": \"name\",\n          \"item-value\": \"value\",\n          \"return-object\": \"\",\n          rules: $data.user_auth_rule\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"rules\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: $data.user_desc,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.user_desc = $event),\n          label: \"설명\",\n          rules: $data.user_desc_rule\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"rules\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 512\n  /* NEED_PATCH */\n  );\n}","map":{"version":3,"mappings":";;;;;;;;;;;;uBACAA,aAsDSC,iBAtDT,EAsDS;IAtDDC,GAAG,EAAC,MAsDH;IAtDU;EAsDV,CAtDT;sBACE,MAoDQ,CApDRC,aAoDQC,gBApDR,EAoDQ,IApDR,EAoDQ;wBAnDN,MAQQ,CARRD,aAQQE,gBARR,EAQQ;QARDC,IAAI,EAAC;MAQJ,CARR,EAAgB;0BACd,MAMkB,CANlBH,aAMkBI,uBANlB,EAMkB;sBALRC,aAKQ;qEALRA,gBAAOC,OAKC;UAJhBC,KAAK,EAAC,MAIU;UAHfC,KAAK,EAAEC,iBAGQ;UAFfC,QAAQ,EAAEL,eAAK,KAAL,GAAK,KAAL,GAAK,IAEA;UADhBM,QAAQ,EAAR;QACgB,CANlB;;QAAA,sCAMkB,EAPJ;;;;MAAA,CAAhB,CAQQ,EACRX,aAOQE,gBAPR,EAOQ;QAPDC,IAAI,EAAC;MAOJ,CAPR,EAAgB;0BACd,MAKkB,CALlBH,aAKkBI,uBALlB,EAKkB;sBAJRC,aAIQ;qEAJRA,gBAAOC,OAIC;UAHhBC,KAAK,EAAC,KAGU;UAFfC,KAAK,EAAEH,kBAEQ;UADhBM,QAAQ,EAAR;QACgB,CALlB;;QAAA,0BAKkB,EANJ;;;;MAAA,CAAhB,CADQ,EASRX,aAOQE,gBAPR,EAOQ;QAPDC,IAAI,EAAC;MAOJ,CAPR,EAAgB;0BACd,MAKkB,CALlBH,aAKkBI,uBALlB,EAKkB;sBAJRC,aAIQ;qEAJRA,gBAAOC,OAIC;UAHhBC,KAAK,EAAC,OAGU;UAFhBK,IAAI,EAAC,UAEW;UADfJ,KAAK,EAAEH;QACQ,CALlB;;QAAA,0BAKkB,EANJ;;;;MAAA,CAAhB,CATQ,EAiBRL,aAOQE,gBAPR,EAOQ;QAPDC,IAAI,EAAC;MAOJ,CAPR,EAAgB;0BACd,MAKkB,CALlBH,aAKkBI,uBALlB,EAKkB;sBAJRC,iBAIQ;qEAJRA,oBAAWC,OAIH;UAHhBC,KAAK,EAAC,UAGU;UAFhBK,IAAI,EAAC,UAEW;UADfJ,KAAK,EAAEH;QACQ,CALlB;;QAAA,0BAKkB,EANJ;;;;MAAA,CAAhB,CAjBQ,EAyBRL,aAUQE,gBAVR,EAUQ;QAVDC,IAAI,EAAC;MAUJ,CAVR,EAAgB;0BACd,MAQc,CARdH,aAQca,mBARd,EAQc;sBAPJR,eAOI;qEAPJA,kBAASC,OAOL;UANZC,KAAK,EAAC,KAMM;UALZO,KAAK,EAAC,UAKM;UAJZ,aAAU,MAIE;UAHZ,cAAW,OAGC;UAFZ,mBAEY;UADXN,KAAK,EAAEH;QACI,CARd;;QAAA,0BAQc,EATA;;;;MAAA,CAAhB,CAzBQ,EAoCRL,aAMQE,gBANR,EAMQ;QANDC,IAAI,EAAC;MAMJ,CANR,EAAgB;0BACd,MAIkB,CAJlBH,aAIkBI,uBAJlB,EAIkB;sBAHRC,eAGQ;qEAHRA,kBAASC,OAGD;UAFhBC,KAAK,EAAC,IAEU;UADfC,KAAK,EAAEH;QACQ,CAJlB;;QAAA,0BAIkB,EALJ;;;;MAAA,CAAhB,CApCQ,EA2CF;;;;IAAA,CApDR,CAoDQ;;;;GArDV;;EAAA","names":["_createBlock","_component_v_form","ref","_createVNode","_component_v_row","_component_v_col","cols","_component_v_text_field","$data","$event","label","rules","_ctx","disabled","required","type","_component_v_select","items"],"sourceRoot":"","sources":["/home/realvue/src/views/test.vue"],"sourcesContent":["<template>\n<v-form ref=\"form\" lazy-validation>\n  <v-row>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_id\" \n        label=\"아이디*\" \n        :rules=\"user_id_rule\" \n        :disabled=\"state == 'ins' ? false : true\"\n        required\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_nm\" \n        label=\"이름*\" \n        :rules=\"user_nm_rule\" \n        required\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_pw\" \n        label=\"비밀번호*\" \n        type=\"password\" \n        :rules=\"user_pw_rule\"\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_pw_chk\" \n        label=\"비밀번호 확인*\" \n        type=\"password\" \n        :rules=\"user_pw_rule2\"\n        ></v-text-field>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-select \n      \tv-model=\"user_auth\" \n        label=\"권한*\" \n        items=\"authList\" \n        item-text=\"name\" \n        item-value=\"value\" \n        return-object\n        :rules=\"user_auth_rule\"\n        ></v-select>\n    </v-col>\n    <v-col cols=\"12\">\n      <v-text-field \n      \tv-model=\"user_desc\" \n        label=\"설명\" \n        :rules=\"user_desc_rule\"\n        ></v-text-field>\n    </v-col>\n  </v-row>\n</v-form>\n</template>\n\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n\tname: 'SignupForm',\n\tdata() {\n\t\treturn {\n            c_name: null,\n\t\t\tc_email: null,\n\t\t\tc_passwd: null,\n\t\t\tc_phonenum: null,\n            dialog: false,\n            state: 'ins',\n      authList: [\n        { name: '관리자', value: 'A'},\n        { name: '일반 사용자', value: 'M'}\n      ],\n      user_id: '',\n        emailRules: [\n            v => !!v || 'E-mail을 입력해주세요.',\n            v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.',\n        ],\n      user_nm: '',\n      user_nm_rule: [\n        v => !!v || '이름은 필수 입력사항입니다.',\n        v => !(v && v.length >= 30) || '이름은 30자 이상 입력할 수 없습니다.',\n        v => !/[~!@#$%^&*()_+|<>?:{}]/.test(v) || '이름에는 특수문자를 사용할 수 없습니다.'\n      ],\n      user_pw: '',\n      user_pw_chk: '',\n      user_pw_rule: [\n        v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n        v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n      ],\n      user_pw_rule2: [\n        v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n        v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n        v => v === this.user_pw || '패스워드가 일치하지 않습니다.'\n      ],\n      user_auth: '',\n      user_auth_rule: [\n        v => !!v || '권한은 필수 선택 사항입니다.'\n      ],\n      user_desc: '',\n      user_desc_rule: [\n        v => !(v && v.length >= 100) || '설명은 100자 이상 입력할 수 업습니다.'\n      ]\n    }\n  },\n        existEmail(c_email) {\n            console.log(c_email);\n\t\t\tthis.$store.dispatch('existEmail', c_email)\n\t\t},\n        emailRules: [\n            v => !!v || 'E-mail을 입력해주세요.',\n            v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.',\n        ],\n        c_passwd: '',\n        c_passwd_chk: '',\n        user_pw_rule: [\n            v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n            v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n        ],\n        user_pw_rule2: [\n            v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n            v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n            v => v === this.user_pw || '패스워드가 일치하지 않습니다.'\n        ],\n\n\t\tsignupConsumer(signupObj) {\n            const validate = this.$refs.form.validate();\n            console.log(this.$store.state.existEmail);\n            if(this.$store.state.existEmail){\n                alert('이메일 중복 확인을 완료해주세요!')\n            } else {\n                console.log(signupObj);\n                axios.post('http://localhost:8080/api/signupConsumer', signupObj) \n                .then(res => {\n                    console.log(res);\n                    if (res.data == 0){\n                        alert(\"회원가입 실패..\")\n                    } else {\n                        alert(\"회원가입 성공..\")\n                        // main으로 넘기기\n                        console.log(\"main으로!!\");\n                        console.log(this.token);\n                        console.log(res.data.token);\n                        this.token = res.data.token;\n                        this.$router.push({name: 'main', params: this.token});\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n            }\n\t\t}\n\t}\n;\n\n</script>\n\n\n\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}