{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\");\n}","map":{"version":3,"mappings":";;uBACAA,oBAEM,KAFN","names":["_createElementBlock"],"sourceRoot":"","sources":["/home/realvue/src/views/test.vue"],"sourcesContent":["<template>\n<div>\n\n</div>\n\n</template>\n\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n    name: 'SignupForm',\n    data() {\n        return {\n            c_name: null,\n            c_email: null,\n            c_passwd: null,\n            c_phonenum: null,\n            dialog: false,\n            state: 'ins',\n            authList: [\n                { name: '관리자', value: 'A' },\n                { name: '일반 사용자', value: 'M' }\n            ],\n            c_email: '',\n            emailRules: [\n                v => !!v || '이메일은 필수 입력사항입니다.',\n                v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.',\n                // v => this.existEmail(v) || '중복된'\n            ],\n            c_name: '',\n            c_name_rule: [\n                v => !!v || '이름은 필수 입력사항입니다.',\n                v => !(v && v.length >= 10) || '이름은 10자 이상 입력할 수 없습니다.',\n                v => !/[~!@#$%^&*()_+|<>?:{}]/.test(v) || '이름에는 특수문자를 사용할 수 없습니다.'\n            ],\n            c_passwd: '',\n            c_passwd_chk: '',\n            c_passwd_rule: [\n                v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n                v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n            ],\n            c_passwd_rule2: [\n                v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n                v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n                v => v === this.c_passwd || '패스워드가 일치하지 않습니다.'\n            ],\n            user_auth: '',\n            user_auth_rule: [\n                v => !!v || '권한은 필수 선택 사항입니다.'\n            ],\n            c_phonenum: '',\n            c_phonenum_rule: [\n                v => this.state === 'ins' ? !!v || '핸드폰 번호는 필수 입력사항입니다.' : true,\n                v => !(v && v.length >= 12) || '핸드폰 번호는 12자 이상 입력할 수 업습니다.',\n                v => /[0-9]/.test(v) || '숫자만 입력해주세요'\n            ] \n        }\n    },\n    methods:{\n    existEmail(c_email) {\n        this.$store.dispatch('existEmail', c_email)\n        console.log(c_email);\n        if(c_email == c_email){\n\n        }\n    },\n    async signupConsumer() {\n        let validate;\n        await this.$refs.form.validate().then( res => {\n            console.log(res);\n        }).catch(err => {\n            console.log(err);\n        });\n        console.log(validate.valid);\n        console.log(this.c_passwd_rule);\n        console.log(this.c_passwd_rule2);\n        console.log(this.user_auth_rule);\n        console.log(this.c_phonenum_rule);\n        // const validate = this.$refs.form.validate();\n        if(validate)\n        console.log(this.$store.state.existEmail);\n        if (this.$store.state.existEmail) {\n            alert('이메일 중복 확인을 완료해주세요!')\n        } else {\n            console.log();\n            // axios.post('http://localhost:8080/api/signupConsumer', signupObj)\n            //     .then(res => {\n            //         console.log(res);\n            //         if (res.data == 0) {\n            //             alert(\"회원가입 실패..\")\n            //         } else {\n            //             alert(\"회원가입 성공..\")\n            //             // main으로 넘기기\n            //             console.log(\"main으로!!\");\n            //             console.log(this.token);\n            //             console.log(res.data.token);\n            //             this.token = res.data.token;\n            //             this.$router.push({ name: 'main', params: this.token });\n            //         }\n            //     })\n            //     .catch(err => {\n            //         console.log(err);\n            //     });\n        }\n    }}\n}\n\n\n</script>\n\n\n\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}