{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"header\", {\n  class: \"welcome-header\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"welcome-header__title\"\n}, \"회 원 가 입\")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n\n  const _component_v_col = _resolveComponent(\"v-col\");\n\n  const _component_v_select = _resolveComponent(\"v-select\");\n\n  const _component_v_row = _resolveComponent(\"v-row\");\n\n  const _component_v_form = _resolveComponent(\"v-form\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_v_form, {\n    ref: \"form\",\n    \"lazy-validation\": \"\",\n    onSubmit: _withModifiers(_ctx.SignupForm, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: _ctx.c_name,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.c_name = $event),\n          label: \"이름*\",\n          rules: _ctx.c_name_rule,\n          required: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"rules\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: _ctx.c_email,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.c_email = $event),\n          label: \"이메일*\",\n          rules: _ctx.emailRules,\n          disabled: _ctx.state == 'ins' ? false : true,\n          required: \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"rules\", \"disabled\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createElementVNode(\"button\", {\n        class: \"login-form__btn_right\",\n        onClick: _cache[2] || (_cache[2] = $event => _ctx.existEmail(_ctx.c_email))\n      }, \"이메일 중복 검사\"), _createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: _ctx.c_passwd,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.c_passwd = $event),\n          label: \"비밀번호*\",\n          type: \"password\",\n          rules: _ctx.c_passwd_rule\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"rules\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: _ctx.c_passwd_chk,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.c_passwd_chk = $event),\n          label: \"비밀번호 확인*\",\n          type: \"password\",\n          rules: _ctx.c_passwd_rule2\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"rules\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: _ctx.c_phonenum,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.c_phonenum = $event),\n          label: \"핸드폰 번호\",\n          rules: _ctx.c_phonenum_rule\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"rules\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_v_col, {\n        cols: \"12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_select, {\n          modelValue: _ctx.user_auth,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.user_auth = $event),\n          label: \"권한*\",\n          items: _ctx.authList,\n          \"item-text\": \"name\",\n          \"item-value\": \"value\",\n          \"return-object\": \"\",\n          rules: _ctx.user_auth_rule\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\", \"items\", \"rules\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createElementVNode(\"button\", {\n      class: \"login-form__btn_right\",\n      onClick: _cache[7] || (_cache[7] = $event => _ctx.signupConsumer())\n    }, \"다음\"), _createCommentVNode(\" {c_name, c_email, c_passwd, c_phonenum} \")]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onSubmit\"])]);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_createVNode","_component_v_form","ref","onSubmit","_ctx","_component_v_row","_component_v_col","cols","_component_v_text_field","$event","label","rules","required","disabled","onClick","type","_component_v_select","items","_createCommentVNode"],"sourceRoot":"","sources":["/home/realvue/src/views/test.vue"],"sourcesContent":["<template>\n<div>\n    <header class=\"welcome-header\">\n    <h1 class=\"welcome-header__title\">회 원 가 입</h1>\n</header>\n    <v-form ref=\"form\" lazy-validation @submit.prevent=\"SignupForm\">\n        <v-row>\n            <v-col cols=\"12\">\n            <v-text-field v-model=\"c_name\" label=\"이름*\" :rules=\"c_name_rule\" required></v-text-field>\n            </v-col>\n            <v-col cols=\"12\">\n                <v-text-field v-model=\"c_email\" label=\"이메일*\" :rules=\"emailRules\"\n                    :disabled=\"state == 'ins' ? false : true\" required></v-text-field>\n            </v-col>\n\n            <button class=\"login-form__btn_right\" @click=\"existEmail(c_email)\">이메일 중복 검사</button>\n\n            <v-col cols=\"12\">\n                <v-text-field v-model=\"c_passwd\" label=\"비밀번호*\" type=\"password\" :rules=\"c_passwd_rule\"></v-text-field>\n            </v-col>\n            <v-col cols=\"12\">\n                <v-text-field v-model=\"c_passwd_chk\" label=\"비밀번호 확인*\" type=\"password\" :rules=\"c_passwd_rule2\">\n                </v-text-field>\n            </v-col>\n            <v-col cols=\"12\">\n                <v-text-field v-model=\"c_phonenum\" label=\"핸드폰 번호\" :rules=\"c_phonenum_rule\"></v-text-field>\n            </v-col>\n            <v-col cols=\"12\">\n                <v-select v-model=\"user_auth\" label=\"권한*\" :items=\"authList\" item-text=\"name\" item-value=\"value\"\n                    return-object :rules=\"user_auth_rule\"></v-select>\n            </v-col>\n        </v-row>\n\n        <button class=\"login-form__btn_right\"\n            @click=\"signupConsumer()\">다음</button>\n            <!-- {c_name, c_email, c_passwd, c_phonenum} -->\n    </v-form>\n</div>\n\n</template>\n\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n    name: 'SignupForm',\n    data() {\n        return {\n            c_name: null,\n            c_email: null,\n            c_passwd: null,\n            c_phonenum: null,\n            dialog: false,\n            state: 'ins',\n            authList: [\n                { name: '관리자', value: 'A' },\n                { name: '일반 사용자', value: 'M' }\n            ],\n            c_email: '',\n            emailRules: [\n                v => !!v || '이메일은 필수 입력사항입니다.',\n                v => /.+@.+/.test(v) || '유효하지 않은 형식의 E-mail 입니다.',\n                // v => this.existEmail(v) || '중복된'\n            ],\n            c_name: '',\n            c_name_rule: [\n                v => !!v || '이름은 필수 입력사항입니다.',\n                v => !(v && v.length >= 10) || '이름은 10자 이상 입력할 수 없습니다.',\n                v => !/[~!@#$%^&*()_+|<>?:{}]/.test(v) || '이름에는 특수문자를 사용할 수 없습니다.'\n            ],\n            c_passwd: '',\n            c_passwd_chk: '',\n            c_passwd_rule: [\n                v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n                v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n            ],\n            c_passwd_rule2: [\n                v => this.state === 'ins' ? !!v || '패스워드는 필수 입력사항입니다.' : true,\n                v => !(v && v.length >= 30) || '패스워드는 30자 이상 입력할 수 없습니다.',\n                v => v === this.c_passwd || '패스워드가 일치하지 않습니다.'\n            ],\n            user_auth: '',\n            user_auth_rule: [\n                v => !!v || '권한은 필수 선택 사항입니다.'\n            ],\n            c_phonenum: '',\n            c_phonenum_rule: [\n                v => this.state === 'ins' ? !!v || '핸드폰 번호는 필수 입력사항입니다.' : true,\n                v => !(v && v.length >= 12) || '핸드폰 번호는 12자 이상 입력할 수 업습니다.',\n                v => /[0-9]/.test(v) || '숫자만 입력해주세요'\n            ] \n        }\n    },\n    methods:{\n    //         async save() {\n    //   const validate = this.$refs.form.validate();\n    //   if (validate) {\n    //     if (confirm ('저장하시겠습니까?')) {\n    //       const params = {\n    //         user_id: this.user_id,\n    //         user_nm: this.user_nm,\n    //         user_pw: this.user_pw,\n    //         user_auth_code: this.user_auth.value,\n    //         user_auth_nm: this.user_auth.name,\n    //         user_desc: this.user_desc\n    //       }\n    //       if (this.state == 'upd') {\n    //         params._id = this.user_info._id;\n    //         params.user_mk_dt = this.user_info.user_mk_dt;\n  \n    //       }\n    //       try {\n    //         const url = (this.state == 'ins' ? 'setting/user/insertUser' : 'setting/user/updateUser');\n    //         const rs = await this.$store.dispatch(url, params);\n    //         if (rs.data.result.error == false) {\n    //           this.$store.dispatch('setting/user/initUserList');\n    //           this.close();\n    //         }\n    //       } catch (err) {\n    //         alert(err);\n    //       }\n    //     }\n    //   }\n    // },\n    // close() {\n    //   this.dialog = false;\n    //   this.state = 'ins';\n    //   this.$refs.form.reset();\n    // },\n    existEmail(c_email) {\n        this.$store.dispatch('existEmail', c_email)\n        console.log(c_email);\n        if(c_email == c_email){\n\n        }\n    },\n    async signupConsumer() {\n        let validate;\n        await this.$refs.form.validate().then( res => {\n            validate = res.valid\n            console.log(res);\n        }).catch(err => {\n            console.log(err);\n        });\n        console.log(validate);\n        console.log(this.$store.state.existEmail);\n        if(!validate){\n            console.log(\"다른 거 확인하길 바람\");\n        } else if (this.$store.state.existEmail) {\n            alert('이메일 중복 확인을 완료해주세요!')\n        } else {\n            console.log();\n            axios.post('http://localhost:8080/api/signupConsumer', signupObj)\n                .then(res => {\n                    console.log(res);\n                    if (res.data == 0) {\n                        alert(\"회원가입 실패..\")\n                    } else {\n                        alert(\"회원가입 성공..\")\n                        // main으로 넘기기\n                        console.log(\"main으로!!\");\n                        console.log(this.token);\n                        console.log(res.data.token);\n                        this.token = res.data.token;\n                        this.$router.push({ name: 'main', params: this.token });\n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n    }}\n\n\n</script>\n\n\n\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}